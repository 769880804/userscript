// ==UserScript==
// @name        soundcloud infinite play on/off switch
// @namespace   https://soundcloud.com/*
// @include     https://soundcloud.com/*
// @version     2.1
// ==/UserScript==
// Generated by CoffeeScript 1.4.0
(function() {
  var activated, generateSwitch, handleSwitch, infinitePlay, infinitePlayInterval, init, initInterval, playlist, soundmanager;

  playlist = null;

  activated = null;

  infinitePlayInterval = null;

  soundmanager = null;

  if (unsafeWindow.top === !unsafeWindow.self) {
    return;
  }

  init = function() {
    var _ref, _ref1;
    unsafeWindow.console.log('soundcloud_userscript: waiting for soundcloud to be ready');
    playlist = (_ref = unsafeWindow.soundManager) != null ? (_ref1 = _ref.soundIDs) != null ? _ref1.slice(0) : void 0 : void 0;
    if (playlist != null) {
      unsafeWindow.console.log('soundcloud_userscript: ready!');
      soundmanager = unsafeWindow.soundManager;
      unsafeWindow.console.log('soundcloud_userscript: soundManager fetched');
      clearInterval(initInterval);
      activated = GM_getValue('status', true);
      if (activated) {
        unsafeWindow.console.log('soundcloud_userscript: infinit play mode started');
        infinitePlayInterval = setInterval(infinitePlay, 500);
      }
      return generateSwitch();
    }
  };

  initInterval = setInterval(init, 100);

  infinitePlay = function() {
    var track, trackID, _i, _len;
    if (activated) {
      playlist = soundmanager.soundIDs;
      for (_i = 0, _len = playlist.length; _i < _len; _i++) {
        trackID = playlist[_i];
        track = soundmanager.getSoundById(trackID);
        if (track.position > 0 && track.paused === false) {
          if (track.duration - track.position < 600) {
            track.togglePause();
            unsafeWindow.console.log('soundcloud_userscript: track stopped');
            return true;
          }
        }
      }
    }
  };

  handleSwitch = function() {
    activated = !activated;
    GM_setValue('status', activated);
    if (activated) {
      unsafeWindow.console.log('soundcloud_userscript: infinit play mode started');
      return infinitePlayInterval = setInterval(infinitePlay, 500);
    } else {
      clearInterval(infinitePlayInterval);
      return unsafeWindow.console.log('soundcloud_userscript: infinite play mode stopped');
    }
  };

  generateSwitch = function() {
    var checkbox, panel, switchContainer, _ref, _ref1, _ref2;
    switchContainer = document.createElement('div');
    switchContainer.id = 'switchContainer';
    if (activated) {
      checkbox = 'unchecked';
    } else {
      checkbox = 'checked';
    }
    switchContainer.innerHTML = '<div id="onoffswitch" class="onoffswitch">' + '<input type="checkbox" id="onoffswitchID" name="onoffswitch" class="onoffswitch-checkbox"' + ("" + checkbox) + '>' + '<label class="onoffswitch-label" for="onoffswitchID">' + '<div class="onoffswitch-inner"></div>' + '<div class="onoffswitch-switch"></div>' + '</label>' + '</div>' + '<div class="switch-outerlabel">&nbsp;&nbsp;INFINITE PLAY&nbsp;&nbsp;</div>';
    panel = (_ref = document.getElementsByClassName('header__container')) != null ? _ref[0] : void 0;
    if ((_ref1 = panel.parentNode) != null) {
      _ref1.insertBefore(switchContainer, panel.nextSibling);
    }
    return (_ref2 = document.getElementById('onoffswitchID')) != null ? _ref2.onclick = handleSwitch : void 0;
  };

  GM_addStyle("#switchContainer{  background-color:#FFFFFF;}");

  GM_addStyle("#onoffswitch{  float: right;  margin-top: 12px;}");

  GM_addStyle(".switch-outerlabel{  float: right;  margin: 13px 0px 25px 5px;  background-color:white;  border-radius: 5px;  text-align: right;}");

  GM_addStyle(".onoffswitch{   position: relative;  width: 56px;  -webkit-user-select:none;  -moz-user-select:none;  -ms-user-select: none;}");

  GM_addStyle(".onoffswitch-checkbox{  display: none;}");

  GM_addStyle(".onoffswitch-label{  display: block; overflow: hidden; cursor: pointer;  border: 2px solid #999999; border-radius: 5px;}");

  GM_addStyle(".onoffswitch-inner {  width: 200%; margin-left: -100%;  -moz-transition: margin 0.3s ease-in 0s; -webkit-transition: margin 0.3s ease-in 0s;  -o-transition: margin 0.3s ease-in 0s; transition: margin 0.3s ease-in 0s;}");

  GM_addStyle(".onoffswitch-inner:before, .onoffswitch-inner:after{  float: left; width: 50%; height: 19px; padding: 0; line-height: 19px;  font-size: 12px; color: white; font-family: Trebuchet, Arial, sans-serif; font-weight: bold;  -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;}");

  GM_addStyle(".onoffswitch-inner:before{  content: 'ON';  padding-left: 5px;  background-color: #FF4A00; color: #FFFFFF;}");

  GM_addStyle(".onoffswitch-inner:after{  content: 'OFF';  padding-right: 5px;  background-color: #D7D7D7; color: #999999;  text-align: right;}");

  GM_addStyle(".onoffswitch-switch{  width: 19px; margin: 0px;  background: #FFFFFF;  border: 2px solid #999999; border-radius: 5px;  position: absolute; top: 0; bottom: 0; right: 33px;  -moz-transition: all 0.3s ease-in 0s; -webkit-transition: all 0.3s ease-in 0s;  -o-transition: all 0.3s ease-in 0s; transition: all 0.3s ease-in 0s;  background-image: -moz-linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 100%);  background-image: -webkit-linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 100%);  background-image: -o-linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 100%);  background-image: linear-gradient(center top, rgba(0,0,0,0.1) 0%, rgba(0,0,0,0) 100%);}");

  GM_addStyle(".onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-inner{  margin-left: 0;}");

  GM_addStyle(".onoffswitch-checkbox:checked + .onoffswitch-label .onoffswitch-switch{  right: 0px;}");

}).call(this)//4689