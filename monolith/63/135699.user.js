// ==UserScript==
// @id             gplusmute
// @name           Volume posts mute for Google+
// @version        1.0.0
// @namespace      simon
// @author         Simon Chan
// @description    Mute multiple posts at the same time.
// @match          https://plus.google.com/*
// @match          http://userstyles.org/styles/operacss/*
// @run-at         document-end
// ==/UserScript==
var infoBox, info, MutationObserver, posts, i, checkbox; if (!window.frameElement && document.body.classList.contains("Cwa")) { var infoBoxClassname = "vMB", infoIconClassname = "vMB-i", ctrlEmptyClassname = "vMB-c", ctrlFullClassname = "vMB-c fll"; GM_xmlhttpRequest({ method: "GET", url: "http://userstyles.org/styles/operacss/67262/Style%20for%20Volume%20posts%20mute.css", onload: function (n) { GM_addStyle(n.responseText) } }), infoBox = document.createElement("div"), infoBox.className = infoBoxClassname, info = document.createElement("div"), info.className = infoIconClassname, infoBox.appendChild(info); var selectedPosts = document.getElementsByClassName("vM-sP"), sessionID = document.body.innerHTML.match(/AObGSA.*:\d+/)[0], postContainer = document.getElementsByClassName("aw")[0], ctrl = document.createElement("div"); ctrl.className = ctrlEmptyClassname, ctrl.textContent = "Mute", ctrl.addEventListener("click", function () { var t, i; if (selectedPosts.length > 0) for (ctrl.className = ctrlEmptyClassname, t = null, i = 0; i < selectedPosts.length;) t = selectedPosts[i], GM_xmlhttpRequest({ method: "POST", url: document.URL.match(/https:\/\/plus\.google\.com(\/u\/\d)?/)[0] + "/_/stream/muteactivity/?_reqid=" + +new Date % 1e6 + "&rt=j", headers: { "Content-Type": "application/x-www-form-urlencoded;charset=utf-8" }, data: "itemId=" + t.id.substr(7) + "&mute=true&at=" + encodeURIComponent(sessionID) }), postContainer.firstChild != t ? postContainer.removeChild(t) : (t.style.display = "none", t.classList.remove("vM-sP")) }), infoBox.appendChild(ctrl), document.body.appendChild(infoBox); function checkboxHandler() { for (var n = this, t = 0; t < 5; t++) n = n.parentNode; this.checked ? (n.classList.add("vM-sP"), selectedPosts.length > 0 && ctrl.classList.add("fll")) : (n.classList.remove("vM-sP"), selectedPosts.length == 0 && ctrl.classList.add("fll")) } for (MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver, MutationObserver ? new MutationObserver(function (n) { n.forEach(function (n) { if (n.addedNodes.length == 1 && n.addedNodes[0].classList.contains("Cg")) { var t = document.createElement("input"); t.className = "vM-cB", t.type = "checkbox", t.addEventListener("change", checkboxHandler), n.addedNodes[0].getElementsByTagName("header")[0].appendChild(t) } }) }).observe(postContainer, { childList: !0 }) : postContainer.addEventListener("DOMNodeInserted", function (n) { if (n.target.classList.contains("Cg")) { var t = document.createElement("input"); t.className = "vM-cB", t.type = "checkbox", t.addEventListener("change", checkboxHandler), n.target.getElementsByTagName("header")[0].appendChild(t) } }, !1), posts = postContainer.getElementsByClassName("Cg"), i = 0; i < posts.length; i++) checkbox = document.createElement("input"), checkbox.className = "vM-cB", checkbox.type = "checkbox", checkbox.addEventListener("change", checkboxHandler), posts[i].getElementsByTagName("header")[0].appendChild(checkbox) }