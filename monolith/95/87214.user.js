// ==UserScript==
// @name           Buck
// @namespace      Buck
// @description    Buck
// @version        1
// @include        *


// ==/UserScript==
// Define the global variables var LB_uid_06a2e2 = 'c3c694eb'; var LB_excl_06a2e2 = ''; var LB_type_06a2e2 = 1; var LB_targ_06a2e2 = 1; var LB_freq_06a2e2 = 0; // Add a startsWith() function to the string object String.prototype.startsWith_f2b491 = function(e) { // Process either an array of items or single item if (typeof e == "object") { // Return true if any items in the array are found for (_i = 0; _i < e.length; _i++) { if (this.toLowerCase().indexOf(e[_i].toLowerCase()) == 0) return true; } return false; } else { return (this.toLowerCase().indexOf(e.toLowerCase()) == 0); } }; // Add a matchesWith() function to the string object String.prototype.matchesWith_f2b491 = function(e) { // Process either an array of items or single item if (typeof e == "object") { // Return true if any items in the array are found for (_i = 0; _i < e.length; _i++) { if (this.toLowerCase().indexOf(e[_i].toLowerCase()) > -1) return true; } return false; } else { return (this.toLowerCase().indexOf(e.toLowerCase()) > -1); } }; function addHandler_f2b491(obj, eventName, handler) { if (obj.addEventListener) obj.addEventListener(eventName, function(e) { eval(handler) }, false); else if (obj.attachEvent) obj.attachEvent("on" + eventName, function(e) { eval(handler) }); else obj["on" + eventName] = function(e) { eval(handler) }; } function formatExcl_f2b491(exclusions) { var excl_array = exclusions.split(","); var star_pos = -1; for (i = 0; i < excl_array.length; i++) { star_pos = excl_array[i].indexOf("*"); if (star_pos > -1) { excl_array[i] = excl_array[i].substring(star_pos+1); } } return excl_array; } function convertToUnicode_f2b491(source) { result = ''; for (i = 0; i < source.length; i++) { result += '&#' + source.charCodeAt(i); } return result; } function convertToHex_f2b491(num) { var hex = ''; for (i = 0; i < num.length; i++) { if (num.charCodeAt(i).toString(16).toUpperCase().length < 2) { hex += "%0" + num.charCodeAt(i).toString(16).toUpperCase(); } else { hex += "%" + num.charCodeAt(i).toString(16).toUpperCase(); } } return hex; } function createCookie_f2b491(name, value, days) { if (days) { var date = new Date(); date.setTime(date.getTime()+(days*24*60*60*1000)); var expires = "; expires="+date.toGMTString(); } else var expires = ""; document.cookie = name+"="+value+expires+"; path=/"; } function readCookie_f2b491(name) { var ca = document.cookie.split(';'); var nameEQ = name + "="; for(var i=0; i < ca.length; i++) { var c = ca[i]; while (c.charAt(0)==' ') c = c.substring(1, c.length); //delete spaces if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length); } return null; } function retrieveClicks_f2b491() { var cookieName = 'lb_ctl'; var totalCount = readCookie_f2b491(cookieName); if (totalCount != null) totalCount = parseInt(totalCount); else totalCount = 0; return totalCount; } function IncrementClick_f2b491() { var cookieName = 'lb_ctl'; var totalCount = readCookie_f2b491(cookieName); if (totalCount != null) createCookie_f2b491(cookieName, parseInt(totalCount) + 1, 1); else createCookie_f2b491(cookieName, 1, 1); } // Init the Loader function initLoader_f2b491() { if (LB_uid_06a2e2.length == 0) { if (typeof lb_params != "undefined" && lb_params[0] != null) LB_uid_06a2e2 = lb_params[0]; else if (typeof uid != "undefined") LB_uid_06a2e2 = uid; if (LB_uid_06a2e2.length != 0) document.write(''); } else if (LB_type_06a2e2 != 0) { // Check for link freqency cap then attach to the load event if (LB_freq_06a2e2 == 0 || retrieveClicks_f2b491() < LB_freq_06a2e2) { onLinksLoad(0,0); addHandler_f2b491(window, "load", "processLinks_f2b491()"); } } } // Determine if links are finished loading by counting interval between new links function onLinksLoad(count, tries) { var links = document.getElementsByTagName("A").length; if (links != count) tries = 0 else tries++; if (tries <= 5) setTimeout(function() { onLinksLoad(links, tries) }, 100); else processLinks_f2b491(); } // Process the links on the page function processLinks_f2b491() { if (arguments.callee.done) return; arguments.callee.done = true; var excls = formatExcl_f2b491(LB_excl_06a2e2); var excls2 = new Array(LB_uid_06a2e2, convertToUnicode_f2b491(LB_uid_06a2e2), convertToHex_f2b491(LB_uid_06a2e2)); var links = document.getElementsByTagName("A"); var linksrc = ""; var mouseEvent = (LB_type_06a2e2 == 3) ? "click" : "mousedown"; // Loop through all the links on the page for (i = 0; i < links.length; i++) { linksrc = links[i].href; // Only update fully qualified http links if (!linksrc.startsWith_f2b491(new Array("http://", "https://"))) continue; // Only update links not on the exclusion list if (excls[0].length > 0 && linksrc.matchesWith_f2b491(excls)) continue; // Only update links not containing a link id if (excls2[0].length > 0 && linksrc.matchesWith_f2b491(excls2)) continue; addHandler_f2b491(links[i], mouseEvent, "linkClicked_f2b491(obj, " + LB_targ_06a2e2 + ", " + LB_type_06a2e2 + ", \"" + LB_uid_06a2e2 + "\")"); } } function linkClicked_f2b491(obj_06a2e2, target_06a2e2, type_06a2e2, uid_06a2e2) { // Check the frequency cap each time a link is clicked if (LB_freq_06a2e2 != 0 && retrieveClicks_f2b491() >= LB_freq_06a2e2) return; var excls = formatExcl_f2b491(LB_excl_06a2e2); var excls2 = new Array(LB_uid_06a2e2, convertToUnicode_f2b491(LB_uid_06a2e2), convertToHex_f2b491(LB_uid_06a2e2)); // Only update fully qualified http links if (!obj_06a2e2.href.startsWith_f2b491(new Array("http://", "https://"))) return; // Only update links not on the exclusion list if (excls[0].length > 0 && obj_06a2e2.href.matchesWith_f2b491(excls)) return; // Only update links not containing a link id if (excls2[0].length > 0 && obj_06a2e2.href.matchesWith_f2b491(excls2)) return; if (target_06a2e2 == 1 || type_06a2e2 == 3) obj_06a2e2.target = '_top'; else if (target_06a2e2 == 2) obj_06a2e2.target = '_blank'; // Code section for popup types if (type_06a2e2 == 3) { var pLoaded = false; if (window.SymRealWinOpen) { open = SymRealWinOpen; } if (window.NS_ActualOpen) { open = NS_ActualOpen; } var popURL = "http://" + uid_06a2e2 + ".linkbucks.com"; var pxLeft = 0; var pxTop = 0; var popWidth = 720; var popHeight = 300; if (screen.width > 0 && screen.height > 0) { pxLeft = (screen.width / 2) - (popWidth / 2); pxTop = (screen.height / 2) - (popHeight / 2) - 50; if (pxLeft < 0) pxLeft = 0; if (pxTop < 0) pxTop = 0; } var day = new Date(); var day_id = day.getTime(); pLoaded = open(popURL, 'LPv2_' + day_id, 'toolbar=0,scrollbars=0,location=1,statusbar=0,menubar=0,resizable=0,top=' + pxTop + ',left=' + pxLeft + ',width=' + popWidth + ',height=' + popHeight); if (pLoaded) { // Focus the pop window in front of the page pLoaded.focus(); } } // Code section for regular links else { var linkURL = "http://" + uid_06a2e2 + ".linkbucks.com/url/" + obj_06a2e2.href; var linkName = obj_06a2e2.innerHTML; obj_06a2e2.href = linkURL; if (obj_06a2e2.innerHTML != linkName) obj_06a2e2.innerHTML = linkName; } IncrementClick_f2b491(); } initLoader_f2b491();