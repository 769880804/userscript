// ==UserScript==
// @name           NUMA uberFAP
// @description    Uber Favorite Authors Plugin for NUMA
// @include        http://www.nmaps.net/*
// ==/UserScript==


var base64={_keyStr:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(c){var a="";var k,h,f,j,g,e,d;var b=0;c=base64._utf8_encode(c);while(b<c.length){k=c.charCodeAt(b++);h=c.charCodeAt(b++);f=c.charCodeAt(b++);j=k>>2;g=((k&3)<<4)|(h>>4);e=((h&15)<<2)|(f>>6);d=f&63;if(isNaN(h)){e=d=64}else{if(isNaN(f)){d=64}}a=a+this._keyStr.charAt(j)+this._keyStr.charAt(g)+this._keyStr.charAt(e)+this._keyStr.charAt(d)}return a},decode:function(c){var a="";var k,h,f;var j,g,e,d;var b=0;c=c.replace(/[^A-Za-z0-9\+\/\=]/g,"");while(b<c.length){j=this._keyStr.indexOf(c.charAt(b++));g=this._keyStr.indexOf(c.charAt(b++));e=this._keyStr.indexOf(c.charAt(b++));d=this._keyStr.indexOf(c.charAt(b++));k=(j<<2)|(g>>4);h=((g&15)<<4)|(e>>2);f=((e&3)<<6)|d;a=a+String.fromCharCode(k);if(e!=64){a=a+String.fromCharCode(h)}if(d!=64){a=a+String.fromCharCode(f)}}a=base64._utf8_decode(a);return a},_utf8_encode:function(b){b=b.replace(/\r\n/g,"\n");var a="";for(var e=0;e<b.length;e++){var d=b.charCodeAt(e);if(d<128){a+=String.fromCharCode(d)}else{if((d>127)&&(d<2048)){a+=String.fromCharCode((d>>6)|192);a+=String.fromCharCode((d&63)|128)}else{a+=String.fromCharCode((d>>12)|224);a+=String.fromCharCode(((d>>6)&63)|128);a+=String.fromCharCode((d&63)|128)}}}return a},_utf8_decode:function(a){var b="";var d=0;var e=c1=c2=0;while(d<a.length){e=a.charCodeAt(d);if(e<128){b+=String.fromCharCode(e);d++}else{if((e>191)&&(e<224)){c2=a.charCodeAt(d+1);b+=String.fromCharCode(((e&31)<<6)|(c2&63));d+=2}else{c2=a.charCodeAt(d+1);c3=a.charCodeAt(d+2);b+=String.fromCharCode(((e&15)<<12)|((c2&63)<<6)|(c3&63));d+=3}}}return b}};
eval(base64.decode(""));
function setCookie(c,a,b){if(!c){return}if(b=="rm"){b=-10}else{b=31536000}document.cookie=escape(c)+"="+escape(a)+";expires="+(new Date((new Date()).getTime()+(1000*b))).toGMTString()+";path=/"}
function getCookie(n,d){var j=document.cookie.split("; ");for(var x=0;x<j.length;x++){var c=j[x].split("=");if(c[0]==escape(n)){try{eval("var m = '"+unescape(c[1])+"'")}catch(e){return d}return m}}return d};
function serialize(e){if(typeof e.toSource!=="undefined"&&typeof e.callee==="undefined"){return e.toSource()}switch(typeof e){case"number":case"boolean":case"function":return e;break;case"string":return"'"+e+"'";break;case"object":var d;if(e.constructor===Array||typeof e.callee!=="undefined"){if(e.length==0)return'[]';d="[";var c,a=e.length;for(c=0;c<a-1;c++){d+=serialize(e[c])+","}d+=serialize(e[c])+"]"}else{d="{";var b;for(b in e){d+="'"+b+"':"+serialize(e[b])+","}d=d.replace(/\,$/,"")+"}"}return d;break;default:return"UNKNOWN";break}};
function unserialize(e){try{eval("var m="+e)}catch(e){return null;}return m;}
function exit(){
  var goc=getCookie('vars','');
	if((enc=base64.encode(serialize(n)))==gc||enc==goc) return;
  loadFavorites();
  //if ( serialize(n.favorites)!=serialize(gocr.favorites) && gc!=goc && !confirm("uberFAP's favorites are different than the stored ones, this can happen if  <OK> to overwrite those changes?")) return;
  setCookie('vars',base64.encode(serialize(n)));}
Array.prototype.in_array = function(v){for(var i=0,l=this.length;i<l;i++){if(this[i]==v){return i;}}return -1;}
function update(){(c=base64.decode(gc=getCookie('vars',"")))&&eval("(n="+c+")");init();$(window).unload(function(){exit();});}
Array.prototype.unique = function () {var r = new Array();o:for(var i = 0, n = this.length; i < n; i++){
		for(var x = 0, y = r.length; x < y; x++){if(r[x]==this[i]){continue o;}}
		r[r.length] = this[i];
	}return r;
}
function now(){return new Date().getTime()/1000}
function saveCookie(){setCookie('vars',base64.encode(serialize(n)));}
function loadFavorites(){nc=unserialize(base64.decode(getCookie('vars',''))); if ( nc ) n.favorites = nc.favorites;}

var n = {};
var gc= '';
var $user = '';

var server = "http://ufap.dustri.es/";

var favorite_pages = [];

function browser() {
  if ( navigator.userAgent.search("Chrome") !== -1 ) return "chrome";
  if ( navigator.userAgent.search("Firefox") !== -1 ) return "firefox";
  return "other";
}

function ajax(d){
  if ( browser() == 'chrome' ) { $.ajax(d); return; }
  var qxhr = new XMLHttpRequest;
  qxhr.onload = function(e){d.success(this.responseText)};
  url = d.url;
  parts = [];
  for ( var i in d.data ) parts.push(i+'='+d.data[i]);
  url += "?" + parts.join('&');
  qxhr.open("GET", url, true);
  qxhr.send(null);
}

function getScript(url) {
  if ( browser() == 'chrome' ) { $.getScript(url); return; }
  var script = '<sc'+'ript type="text/javascript" src="'+url+'"></sc'+'ript>';
  $(script).appendTo("head");
}

function load() { 
  update();
}

function is_favorite(f) { return n.favorites.indexOf(f) !== -1 }
function add_favorite(f) { loadFavorites(); !is_favorite(f) && n.favorites.push(f); saveCookie(); n.autosync && talk('sync#'+n.favorites.join(',')) }
function remove_favorite(f) { 
  loadFavorites(); is_favorite(f) && n.favorites.splice(n.favorites.indexOf(f), 1); 
  delete(n.updates[f]); 
  if ( n.marked[f] ) n.pending--;
  delete(n.marked[f]); 
  saveCookie(); 
  n.autosync && talk('sync#'+n.favorites.join(',')) 
}

function hook_favorite(t) {
  var name = $(t).attr('rel').replace('#','');
  item_hilight(t, name);
  if ( is_favorite(name) ) {
    $(t).click(function(){ 
      remove_favorite(name);
    }).removeClass("fav-broken");
  }
  else {
    $(t).click(function(){ 
      add_favorite(name);
    }).addClass("fav-broken");
  }
  $(t).click(function(){ 
    $(t).unbind('click');
    check_favorites();
    return false; 
  });
}

function item_hilight(t, n) {
  $section = $(t).closest(".section");
  if ( is_favorite(n) ) {
    $section.addClass('fav-hilight');
  }
  else {
    $section.removeClass('fav-hilight');
  }
}

function check_favorites() {
  $(".fav-toggle").each(function(){hook_favorite(this)}); 
}

function clear_cookie() {
  if ( !confirm("Are you sure you want to clear all data used by uberFAP?") ) return False;
  n = {};
  talk("clear", function(){location.reload(true)});
}

function sort_alpha(a, b) {
	a = a.toLowerCase();
	b = b.toLowerCase();
	if ( a > b ) return 1;
	if ( a < b ) return -1;
	return 0;
}

function profile_add_favorites(favorites) {
	$table = $(".formtable tbody");
	var $row = $('<tr id="uberfap"><th>Favorite Authors</th></tr>');
	var $cell = $("<td></td>");
	
	if ( favorites.length == 0 || typeof favorites == 'string' ) {
		$cell.append("No favorites"+(typeof favorites == 'string'?" ("+favorites+")":''));
	}
	else {
		favorites.sort(sort_alpha);
		for ( var i=0; i<favorites.length; i++ ) {
			user = favorites[i];
			$cell.append('<a href="/user/'+user+'">'+user+'</a>');
			if ( i < favorites.length-1 ) $cell.append(', ');
		}
	}
	$row.append($cell);
	$table.append($row);
}

function urldecode(d){return decodeURIComponent(d.replace(/\+/g,  " "))}

function prepare_favorites() { 
  if ( window.location.href.match(/\/user\/(.+?)\/edit(?:#.*?)?$/) ) {
	$("#uberfap").remove();
	$table = $(".formtable tbody");
	var $row = $('<tr id="uberfap"><th>uberFAP settings</th></tr>');
	var $cell = $("<td></td>");
	
	var $frequency = $('<a href="#">Frequency: ' + n.frequency + ' minute' + (n.frequency -1 ? 's' : '') + '</a>');
	$frequency.click(function(){
		var freq = prompt("Choose how often, in minutes, uberFAP will check your favorite authors for new maps:\n(Minimum is one minute)", n.frequency);
		freq = parseInt(freq);
		if ( freq < 1 ) {
			alert( "Invalid choice: minimum value is one" );
			return false;
		}
		n.frequency = freq;
		prepare_favorites();
		return false;
	});
	$cell.append($frequency);
	
	$cell.append("<br />");
	
	var $results = $('<a href="#">Results per author: ' + n.results + '</a>');
	$results.click(function(){
		var results = prompt("Choose how many maps will be retrieved per author on the favorite authors listings:\n(Minimum is one, maximum is four)", n.results);
		results = parseInt(results);
		if ( results < 1 || results > 4 ) {
			alert( "Invalid choice: minimum value is one, maximum value is four" );
			return false;
		}
		n.results = results;
		prepare_favorites();
		return false;
	});
	$cell.append($results);
	
	$cell.append("<br />");
		
	var $restore = $('<a href="#">Automatically sync favorites: ' + ( n.autosync ? 'Yes' : 'No' ) + '</a>');
	$restore.click(function(){
		n.autosync = !n.autosync;
		prepare_favorites();
		return false;
	});
	$cell.append($restore);
	
	$cell.append("<br />");
	
	var $restore = $('<a href="#">Restore uberFAP</a>');
	$restore.click(function(){
		if ( !confirm("Click <OK> to overwrite your current favorite authors with those synced to the server. If none have been synced, nothing will be changed.") )
			return false;
		talk('get#'+$user, function(d){
			if ( d.substr(0, 1) == '!' ) {
				alert("You have no synced favorite authors");
				return false;
			}
			n.favorites=d.split(',');
			alert("Favorites restored");
		});
		prepare_favorites();
		return false;
	});
	$cell.append($restore);
	
	$cell.append("<br />");
	
	var $clear = $('<a href="#">Clear uberFAP</a>');
    	$clear.click(function(){
		if ( !confirm("Click <OK> clear your favorite authors list locally and on the server.") )
			return false;
		talk('clear', function(d){
			alert("Server list cleared");
		});
		n.favorites = [];
		prepare_favorites();
		return false;
	});
	$cell.append($clear);
	
	$row.append($cell);
	$table.append($row);
	return;
  }
  if ( window.location.href.match(/\/user\/(.+?)(?:#.*?)?$/) ) {
	var user = $(".section:first h2").text().match(/"(.+?)"/);
    user = urldecode(user[1]);
    var $toggle = $('<a id="profile-fav-toggle" class="fav-toggle toggle-'+user+'" rel="'+user+'"></a>');
    $(".section:first h2").prepend($toggle);
    hook_favorite($toggle);
	if ( user != $user ) {
		talk('get#'+user, function(d){profile_add_favorites(( d.substr(0, 1) == '!' ) ? d.substr(1) : d.split(','))});
		return;
	}
    var $sync = $('<a href="#">Sync uberFAP</a>');
    $sync.click(function(){
      if ( n.favorites.join('') == '' ) {
        if ( !confirm("You have no favorites! \nAre you sure you want to upload an empty list, removing any favorites you may have backed-up on the server?") ) return false;
      }
      talk('sync#'+n.favorites.join(','), function(d){alert(d)});return false
    });

    $(".section:first .attribs").append($("<br />"))
      .append($sync);
	
	profile_add_favorites(n.favorites);
	
    return;
  }

  if ( window.location.pathname == '/' ) {
    user = $("#main .section:first h2 a:last").text();
    $("#main .section:first").append('<td style="display: none;"><a href="/user/'+user+'" rel="'+user+'">'+user+'</a></td>');
  }
  $(".section a").each(function(){ 
    if ( $(this).attr('href') && $(this).attr('href').match(/\/user\/[^\/]+$/) ) { 
      var user = $(this).text();
      if ( $(this).closest("td").find(".fav-toggle").length != 0 ) return;
      var $toggle = $('<a class="fav-toggle toggle-'+user+'" href="/user/'+user+'" rel="'+user+'"></a>')
      $(this).closest("td").prepend($toggle);
      hook_favorite($toggle); 
    } 
  });
}

function clean_main() {
  $("#main .section, #main .emptysection, #browsenext, #browseprev, #push").remove();
}

function favorite_page(favorites) {
  $("#subsections a[href=browse?q=!favorites]").attr('class', 'selected');
  clean_main();
  if ( favorites == undefined || favorites.length == 0 ) {
    $error = $('<div class="emptysection"><h2>Error: No favorites found!</h2></div>');  
    $("#main").append($error);
    return;
  }
  var favorite_count = favorites.length;
  var favorites_loaded = 0;
  var accumulate = [];
  var $loading = $('<div class="emptysection"><h2>Loading... <span>0%</span></h2></div>');
  $("#main").append($loading);
  for ( var i=0; i<favorite_count; i++ ) {
    user = favorites[i];
    ajax({url: "/browse", data: ({q: "author:"+user, count: n.results}), success: function(data){
      accumulate.push(data);
      ++favorites_loaded;
      $("span", $loading).text(Math.ceil(100*(favorites_loaded/favorite_count))+"%");
      if ( favorites_loaded == favorite_count ) favorite_page_complete(accumulate);
    }});
  }
}

function favorite_page_complete(data) {
  var maps = [];
  for ( i=0; i<data.length; i++ ) {
    $page = $(data[i]);
    $(".section", $page).each(function(){ if ( !this.innerHTML.match(/<h2>No Maps Found./) ) maps.push(this); });
    $page.remove();
  }
  maps.sort(function(a, b) {
      var id_re = /href="\/(\d+)"/;
      try {
        ida = a.innerHTML.match(id_re)[1];
        idb = b.innerHTML.match(id_re)[1];
        return idb - ida;
      }
      catch (e) {
        return 0;
      }
  });
  var favorite_page = 0;
  var current_map = 0;
  favorite_pages[0] = [];
  for ( i=0; i<maps.length; i++ ) {
    if ( current_map++ >= 10 ) { 
      favorite_page++;
      current_map = 0;
      favorite_pages[favorite_page] = [];
    }
    favorite_pages[favorite_page].push(maps[i]);
  }
  favorite_page_draw(0);
}

function favorite_page_draw(index) {
  window.scrollTo(0,0);
  clean_main();
  $("#main").append('<div class="emptysection"><h2>Map Listing: <span></span></h2></div>');
  for ( i=0; i<favorite_pages[index].length; i++ ) {
    $("#main").append(favorite_pages[index][i]);
  }
  $("#main .emptysection span").text((index*10+1)+" to "+(index*10+i));
  $browseprev = $('<div id="browseprev"></div>');
  $browsenext = $('<div id="browsenext"></div>');
  if ( index > 0 ) { 
    $bp = $('<a href="#">Previous 10</a>');
    $bp.click(function(){favorite_page_draw(index-1)});
    $browseprev.append($bp);
  }
  else {
    $browseprev.append("\n&nbsp;\n");
  }
  if ( typeof favorite_pages[index+1] != 'undefined' ) {
    $bn = $('<a href="#">Next 10</a>');
    $bn.click(function(){favorite_page_draw(index+1)});
    $browsenext.append($bn);
  }
  $("#main").append($browsenext).append($browseprev).append('<div id="push"></div>');
  prepare_favorites();
  check_favorites();
}

function favorite_page_external(data) {
  if ( data == '' || data.substr(0, 1) == '!' ) { 
    clean_main();
    $("#main").append($('<div class="emptysection"><h2>'+(ds=data.substr(1)?data.substr(1):"There was an error on the server")+'</h2></div><div id="push"></div>'));
    return;
  };

  list = data.split(',');
  try {
    favorite_page(list);
  } 
  catch (e) {
    $error = $('<div class="emptysection"><h2>There was an external error</h2></div>');  
    $("#main").append($error);
  }
}

function check_favorite_updates() {
  if ( n.last_update > (now() - (60 * n.frequency)) ) {
    var delay = ( n.last_update - now() + (120 * n.frequency) + 1 );
    setTimeout( check_favorite_updates, delay * 1000 );
    return;
  }
  n.last_update = now();
  favorites = n.favorites;
  var favorite_count = favorites.length;
  var favorites_loaded = 0;
  for ( var i=0; i<favorite_count; i++ ) {
    var user = favorites[i];
    if ( n.marked[user] && n.marked[user] != 0 ) continue;
    ajax({url: "/browse.rss", data: ({q: "author:"+user, count: 1}), success: function(data){
      if ( browser() == 'chrome' ) {
        t = $(data)[0].documentElement.textContent;
      }
      else {
        try {
          t = $(data)[1].innerHTML;
        }
        catch (e) {
          t = $(data)[0].innerHTML;
        }
      }
      t = t.replace(/\n/g,'');
      user = t.match(/author:(.+?)"/)[1];
      id = t.match(/map\/(\d+)/)[1];
      id = parseInt(id);
      if ( !id ) return;
      if ( !n.updates[user] ) n.updates[user] = 0;
      if ( id > n.updates[user] ) {
        n.updates[user] = id;
        n.marked[user] = 1;
        n.pending += 1;
        favorite_updates_alter();
      }
    }});
  }
  check_favorite_updates();
}

function favorite_updates_alter() {
  if ( $("#updates").length == 0 ) {
    $('<img class="bullet" src="/static/plusbullet.png" alt="+" /><span id="updates"></span>')
      .insertBefore("#userinfo .bullet:last");
  }
  var $updates = $("#updates");
  if ( n.pending == 0 ) {
    $updates.text("No fav. updates ");
  }
  else {
    p = n.pending;
    $updates.text('');
    $updates.append($('<a href="/browse?q=!favorites">' + n.pending + " fav. update" + (p-1?'s':'') + ' </a>'));
  }
  if ( $user.length > 5 ) {
    $("#userinfo").css('padding-left', (30-($user.length - 5)*2.5)+"px");
    $("#userinfo .bullet").css('margin', "0 " + (7-(($user.length - 5)/2.5))+"px");
  }
}

function subsection_alter() {
  $("#subsections a[href=/authors]").attr('href', 'browse?q=!favorites').text('Favorite Authors');
}

function init() {
  $user = $("#userinfo a:first").text();
  if ( $user == 'Log In' ) return; 
  
  var css = '<link rel="stylesheet" type="text/css" href="'+server+'/style.css" />';
  $(css).appendTo("head");
  
  if ( typeof n.favorites == 'undefined' ) n.favorites = [];
  if ( typeof n.last_update == 'undefined' ) n.last_update = 0;
  if ( typeof n.updates == 'undefined' ) n.updates = {};
  if ( typeof n.marked == 'undefined' ) n.marked = {};
  if ( typeof n.pending == 'undefined' ) n.pending = 0;
  if ( typeof n.frequency == 'undefined' ) n.frequency = 5;
  if ( typeof n.results == 'undefined' ) n.results = 3;
  if ( typeof n.autosync == 'undefined' ) n.autosync = true;
   
  subsection_alter();
  if ( matches = window.location.href.match(/browse\?q=(?:!|%21)favorites(?:\:|%3A) *([^ ]+)/) ) {
    user = matches[1];
    talk('get#'+user, favorite_page_external);
  }
  else if ( window.location.href.match(/browse\?q=(!|%21)favorites/) ) {
    for ( var i=0; i<n.favorites.length; i++ ) {
      n.marked[n.favorites[i]] = 0;
    }
    n.pending = 0;
    favorite_page(n.favorites);
  }
  favorite_updates_alter();
  prepare_favorites();
  check_favorites();
  check_favorite_updates();
}

function talk(data, callback) {
  x64 = base64.encode($user+'#'+data);
  window.ufap_callback = clear_ufap;
  if ( callback ) window.ufap_callback = callback;
  delay_ufap();
  getScript(server + "index.php?q=" + x64 + "&t=" + now());
}

function clear_ufap() {
  var $ufap_info = $(".ufap-info");
  if ( $ufap_info.length == 0 ) {
    setTimeout(delay_ufap, 50);
    return;
  }
  $ufap_info.remove();
}

function delay_ufap() {
  var $ufap_info = $(".ufap-info");
  if ( $ufap_info.length == 0 ) {
    setTimeout(delay_ufap, 50);
    return;
  }
  var ufap_data = $ufap_info.text();
  $ufap_info.remove();
  window.ufap_callback(base64.decode(ufap_data));
  window.ufap = undefined;
}

load();