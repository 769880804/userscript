// Generated by CoffeeScript 1.7.1

/*
// ==UserScript==
// @name bitbucket
// @description onShiftEnter BR, issue reply link.
// @match *://bitbucket.org/*
// ==/UserScript==
 */

(function() {
  'use strict';
  var load, main;

  load = function(func) {
    var fn, script;
    fn = "(" + (func.toString()) + ")();";
    script = document.createElement('script');
    script.appendChild(document.createTextNode(fn));
    return document.body.appendChild(script);
  };

  main = function() {
    return require(['jquery', 'config/markitup'], function($, markItUpSettings) {
      return $(function() {
        (function() {
          var f;
          f = function(markItUpOptions) {
            return function(t) {
              var r;
              r = markItUpSettings(markItUpOptions)(t);
              if (r.nameSpace === 'markup-type-markdown') {
                r.onShiftEnter.replaceWith = "  \n";
              }
              return r;
            };
          };
          return requirejs.s.contexts._.defined['config/markitup'] = f;
        })();
        return (function() {
          $('ul.comment-actions').prepend('<li><a href="#" class="reply-link">返信</a></li>');
          return $(document).on('click', 'a.reply-link', function(event) {
            var $comment, author, content, line, reply, _i, _len, _ref, _ref1;
            event.preventDefault();
            $comment = $(event.currentTarget).closest('article');
            author = $comment.find('a.author').attr('href').replace(/^.*\/(\w+)$/, '$1');
            content = (_ref = $comment.data('content')) != null ? _ref : '';
            reply = [];
            reply.push("Replying to @" + author + " [comment](#comment-" + ($comment.data('comment-id')) + "):");
            reply.push("");
            _ref1 = content.split("\n");
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
              line = _ref1[_i];
              reply.push("> " + line);
            }
            reply.push("");
            reply.push("");
            return $('#id_new_comment').focus().val(reply.join("\n"));
          });
        })();
      });
    });
  };

  load(main);

}).call(this);
