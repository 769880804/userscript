// ==UserScript==
// @id             oldStyleGoogleBarWidget@simon
// @name           Old style Google Bar with Widget Support
// @version        1.1.1
// @namespace      simon
// @author         Simon Chan
// @description    Bring back the old black style Google Bar and make notification area as a widget.
// @include        *.google.com/*
// @run-at         document-end
// ==/UserScript==
function Settings() { this.pinState = !1, this.boxX = 0, this.boxY = 0, this.maxX = 0, this.maxY = 0 } function saveSettings() { localStorage[settingsEntry] = JSON.stringify(settings) } var settingsEntry = "oldGoogleBarState", settings = localStorage[settingsEntry] ? JSON.parse(localStorage[settingsEntry]) : new Settings, css, intervalID; saveSettings(), css = { base: "http://userstyles.org/styles/operacss/66143/Style%20for%20Old%20style%20Google%20Bar%20Loader%20%28Base%29.css", "Google+ Special": "http://userstyles.org/styles/operacss/66142/Style%20for%20Old%20style%20Google%20Bar%20Loader%20%28G%2B%20special%29.css", "Widget Special": "http://userstyles.org/styles/operacss/66394/Style%20for%20Old%20style%20Google%20Bar%20Loader%20%28Widget%20SP%29.css", "NoWidget Special": "http://userstyles.org/styles/operacss/66396/Style%20for%20Old%20style%20Google%20Bar%20Loader%20%28NoWidget%29.css" }, intervalID = setInterval(function () { var f = document.getElementById("gbi3"), v = document.getElementById("gbgsi"), s, r, t, i; if (f) { if (f.textContent.indexOf("\u2026") == -1) { if (document.location.host == "plus.google.com") { var n = document.getElementById("gbu"), c = document.getElementById("gbb"), e = 0, o = 0; function u() { n.style.left = settings.boxX + "px", n.style.top = settings.boxY + "px", c.style.top = n.classList.contains("gbes") ? settings.boxY + 2 + "px" : settings.boxY + "px", saveSettings() } settings.boxX = Math.max(0, Math.min(settings.maxX, innerWidth - n.clientWidth - 10)), settings.boxY = Math.max(0, Math.min(settings.maxY, innerHeight - n.clientHeight)), u(); function l(t) { settings.maxX = settings.boxX = Math.max(0, Math.min(settings.boxX + t.clientX - e, innerWidth - n.clientWidth - 10)), settings.maxY = settings.boxY = Math.max(0, Math.min(settings.boxY + t.clientY - o, innerHeight - n.clientHeight)), e = t.clientX, o = t.clientY, u() } function a() { document.removeEventListener("mousemove", l, !1), document.removeEventListener("mouseup", a, !1) } window.addEventListener("resize", function () { var t = !1; settings.maxX > settings.boxX && (settings.boxX = Math.max(0, Math.min(settings.maxX, innerWidth - n.clientWidth - 10)), t = !0), settings.maxY > settings.boxY && (settings.boxY = Math.max(0, Math.min(settings.maxY, innerHeight - n.clientHeight)), t = !0), t ? saveSettings() : (settings.boxX = Math.max(0, Math.min(settings.boxX, innerWidth - n.clientWidth - 10)), settings.boxY = Math.max(0, Math.min(settings.boxY, innerHeight - n.clientHeight))), u() }), s = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver, new s(function (n) { n.forEach(function (n) { n.target.style.left || u() }) }).observe(n, { attributes: !0, attributeFilter: ["style"] }), r = document.createElement("div"), r.className = "oGB-cB"; function h() { switch (settings.pinState) { case !1: n.style.position = "absolute", t.title = "Relative", t.classList.remove("fx"), t.classList.add("re"); break; case !0: n.style.position = "fixed", t.title = "Fixed", t.classList.remove("re"), t.classList.add("fx") } } t = document.createElement("div"), t.className = "oGB-pB", t.addEventListener("click", function (n) { n.stopPropagation(), settings.pinState = !settings.pinState, h(), saveSettings() }), r.appendChild(t), i = document.createElement("div"), i.className = "oGB-dH", i.title = "Drag", i.addEventListener("mousedown", function (n) { n.button == 0 && (document.addEventListener("mousemove", l, !1), document.addEventListener("mouseup", a, !1), e = n.clientX, o = n.clientY) }), i.addEventListener("click", function (n) { n.stopPropagation() }), r.appendChild(i), h(), n.appendChild(r) } v.textContent = f.textContent + "\u2026", document.getElementById("gbgs1").className = "gbts", document.getElementById("gbgs3").className = "gbts", document.getElementById("gbgs4").className = "gbts", document.getElementById("gbg6").className = "gbts", GM_xmlhttpRequest({ method: "GET", url: css.base, onload: function (n) { GM_addStyle(n.responseText) } }), document.location.host == "plus.google.com" ? (GM_xmlhttpRequest({ method: "GET", url: css["Google+ Special"], onload: function (n) { GM_addStyle(n.responseText) } }), GM_xmlhttpRequest({ method: "GET", url: css["Widget Special"], onload: function (n) { GM_addStyle(n.responseText) } })) : GM_xmlhttpRequest({ method: "GET", url: css["NoWidget Special"], onload: function (n) { GM_addStyle(n.responseText) } }) } clearInterval(intervalID) } }, 1e3)