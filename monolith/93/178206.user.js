// ==UserScript==
// @name       NSU Room Info
// @namespace  http://sekrasoft.nm.ru
// @version    0.1.5
// @description  Adds room information like sockets number
// @match      http://nsu-schedule.ru/now/
// @include	   http://nsu-schedule.ru/now/
// @updateURL	http://userscripts.org/scripts/source/178206.meta.js
// @downloadURL http://userscripts.org/scripts/source/178206.user.js
// @copyright  2013+, SekraSoft
// ==/UserScript==


function Room(p){
  var R = this;
  R.number         = p[0];
  R.name           = p[1] ? p[1] : '';
  R.integer_number = typeof p[0] === 'number' ? p[0] : +p[0].match(/\d*/)[0];
  R.purpose        = p[2]; // 'да':0, 'нет':1, 'терм':2
  R.lock           = p[3]; // 'эл':0, 'стд':1, 'нет':2
  R.opened         = !!p[4];
  R.sockets        = +p[6];
  R.sockets_all    = +p[5];
  R.min_dist       = +p[7];
  R.windows        = +p[8];
  R.win_opn        = +p[10];
  R.win_type       = p[9]; // 'пластик':1, 'дерево':0
}

function newRoom(p){ return new Room(p); }
function bool(x){ return !!x; }

var rooms = {};
var roomlist = [[401,0,1,0,0,0,0,1/0,1,2,0,],
[402,0,0,0,0,0,0,1/0,1,2,0,],
[403,0,1,0,0,0,0,1/0,1,2,0,],
[404,0,1,0,0,0,0,1/0,1,2,0,],
[406,0,1,0,0,0,0,1/0,1,2,0,],
[407,0,1,0,0,0,0,1/0,1,2,0,],
[408,0,1,0,0,0,0,1/0,1,2,0,],
[409,0,0,1,1,2,2,1,2,1,2,],
[410,0,1,1,0,0,0,1/0,1,2,0,],
[411,0,0,1,1,2,1,0.7,1,1,1,],
[413,0,0,1,1,11,7,0.7,2,1,2,],
[414,0,0,0,0,0,0,1/0,1,2,0,],
[415,0,0,1,1,1,1,0.8,1,1,1,],
[416,0,0,1,1,7,7,0.8,3,0,1,],
["416а","",0,1,1,8,8,0.8,2,0,1,],
[417,0,0,1,0,2,1,4.5,4,1,3,],
[420,0,1,1,0,0,0,1/0,1,2,0,],
[421,0,1,1,0,0,0,1/0,1,2,0,],
[422,0,1,1,0,0,0,1/0,1,2,0,],
[423,0,1,1,0,0,0,1/0,1,2,0,],
[426,0,0,1,0,0,0,1/0,1,2,0,],
[427,0,1,1,0,0,0,1/0,1,2,0,],
[428,0,1,1,0,0,0,1/0,1,2,0,],
[429,0,0,1,1,1,1,1.5,3,1,2,],
[430,0,1,1,0,0,0,1/0,1,2,0,],
[431,0,0,1,1,1,1,3.5,1,1,1,],
[432,0,1,1,0,0,0,1/0,1,2,0,],
[433,0,0,2,1,1,1,4,1,1,1,],
[434,0,0,1,1,1,1,0.5,2,1,1,],
[436,0,0,1,1,2,2,1.2,1,1,1,],
[437,0,0,1,1,1,1,3,2,0,2,],
[438,0,0,1,1,4,4,1.5,2,1,2,],
[439,0,1,1,0,0,0,1/0,1,2,0,],
[441,0,0,1,1,2,2,2,1,1,1,],
[442,"Канторовича",0,0,0,0,0,1/0,1,2,0,],
[443,0,0,0,0,0,0,1/0,1,2,0,],
[445,0,1,1,0,0,0,1/0,1,2,0,],
[301,0,2,0,0,0,0,1/0,1,2,0,],
["301а","",1,0,0,0,0,1/0,1,2,0,],
["302б","",1,0,0,0,0,1/0,1,2,0,],
["302г","",1,1,0,0,0,1/0,1,2,0,],
[303,0,2,0,0,0,0,1/0,1,2,0,],
[304,0,2,0,0,0,0,1/0,1,2,0,],
[305,0,2,0,0,0,0,1/0,1,2,0,],
[306,0,2,0,0,0,0,1/0,1,2,0,],
[307,0,2,0,0,0,0,1/0,1,2,0,],
[308,0,1,0,0,0,0,1/0,1,2,0,],
[310,0,2,0,0,0,0,1/0,1,2,0,],
[312,0,2,0,0,0,0,1/0,1,2,0,],
[313,"Соболев",0,0,0,8,8,0.3,4,1,4,],
[314,0,1,0,0,0,0,1/0,1,2,0,],
[315,"Векуа",0,0,0,0,0,1/0,1,2,0,],
[316,0,0,1,1,4,4,1.5,3,0,2,],
[317,0,1,0,0,0,0,1/0,1,2,0,],
["317а","",1,1,0,0,0,1/0,1,2,0,],
[318,0,0,1,1,5,5,0.5,3,0,1,],
[319,0,1,0,0,0,0,1/0,1,2,0,],
[320,0,0,1,1,3,3,0.8,1,0,1,],
[322,0,0,1,1,5,5,2,2,0,0,],
[324,"Врагова",0,0,0,0,0,1/0,1,2,0,],
[326,0,0,1,1,1,1,1,1,1,1,],
[327,0,1,0,0,0,0,1/0,1,2,0,],
[328,0,0,1,1,1,1,0.9,1,1,1,],
[330,0,0,1,1,1,1,1.2,1,1,1,],
[331,0,1,0,0,0,0,1/0,1,2,0,],
[332,0,0,1,1,1,1,2.5,1,1,1,],
[333,0,0,1,1,8,8,1,2,1,2,],
[334,0,0,1,1,1,1,2.5,1,1,1,],
[335,0,1,0,0,0,0,1/0,1,2,0,],
[336,0,0,1,1,4,4,1.5,1,1,1,],
[337,0,1,1,0,0,0,1/0,1,2,0,],
[338,0,0,1,1,0,0,1/0,1,1,1,],
[340,0,0,1,1,3,3,1,1,0,1,],
[342,0,0,1,1,1,1,2,1,0,1,],
[344,0,1,0,0,0,0,1/0,1,2,0,],
[348,0,0,1,0,0,0,1/0,1,2,0,],
["ТСАНИ","ТСАНИ",0,1,0,0,0,1/0,1,2,0,],
["МА","МА",0,0,0,0,0,1/0,1,2,0,],
["БА","БА",0,0,0,0,0,1/0,1,2,0,],
[219,0,1,0,0,0,0,1/0,1,2,0,],
[221,0,1,0,0,0,0,1/0,1,2,0,],
[223,0,1,0,0,0,0,1/0,1,2,0,],
[227,0,1,0,0,0,0,1/0,1,2,0,],
[228,0,3,1,0,0,0,1/0,1,2,0,],
[229,0,1,0,0,0,0,1/0,1,2,0,],
[230,0,3,1,0,0,0,1/0,1,2,0,],
[231,0,1,0,0,0,0,1/0,1,2,0,],
[232,0,3,1,0,0,0,1/0,1,2,0,],
[233,0,1,0,0,0,0,1/0,1,2,0,],
[235,0,1,0,0,0,0,1/0,1,2,0,],
[237,0,1,0,0,0,0,1/0,1,2,0,],
[239,"ректор",1,0,0,0,0,1/0,1,2,0,],
[245,0,1,0,0,0,0,1/0,1,2,0,],
[249,0,1,0,0,0,0,1/0,1,2,0,],
[251,0,1,0,0,0,0,1/0,1,2,0,],
[253,0,0,1,1,6,2,0.6,4,0,2,],
[255,0,1,0,0,0,0,1/0,1,2,0,],
[257,0,2,0,0,0,0,1/0,1,2,0,],
[259,0,1,0,0,0,0,1/0,1,2,0,],
[261,0,3,1,0,0,0,1/0,1,2,0,],
[263,0,3,1,0,0,0,1/0,1,2,0,],
[265,0,3,1,0,0,0,1/0,1,2,0,]].map(newRoom);
roomlist.filter(bool).forEach(function(room){ rooms[String(room.number).toLowerCase()] = room; });

if(!Function.prototype.bind) Function.prototype.bind = function(){
  var args = arguments, that = this;
  return function(){ Function.prototype.call.apply(that, args); }
};

function sort(by){ return function(x){ return x.sort(by); } }
function map(f, arr){ return Array.prototype.map.call(arr, f); }
function map1(f){ return map.bind(this, f); }
function arr(a){ return map(function(x){ return x; }, a); }

function getAllRoomsInfo(doc){ return arr(doc.querySelectorAll("div.board>.row-fluid div.span2>div")); }

function addProp(propname, propclass, propval, elem){
  var p = document.createElement('p');
  p.appendChild(document.createTextNode(propname + ': '));
  var sp = document.createElement('span');
  sp.className = propclass;
  sp.innerHTML = propval;
  p.appendChild(sp);
  elem.appendChild(p);
}

function processRoom(roomInfo){
  var numM = roomInfo.querySelector('h4 a').innerHTML.match(/(.*?)\s*<i/);
  if(!numM) return;
  var room = rooms[numM[1].toLowerCase()];
  if(!room) return;
  
  if(room.opened){
    addProp('Розеток', 'sockets', room.sockets, roomInfo);
    if(room.sockets) addProp('Роз.расст.', 'sockdist', room.min_dist, roomInfo);
  }
  addProp('Открыта', 'opened', room.opened ? 'да' : 'нет', roomInfo);
}

getAllRoomsInfo(document).forEach(processRoom);