// ==UserScript==
// @name           ProTumblr
// @description    Hide posts that aren't entirely in the title box.
// @author         rhd
// @include        http://www.tumblr.com/dashboard
// @include        http://www.tumblr.com/dashboard*
// @include        http://www.tumblr.com/tagged/*
// @include        http://www.tumblr.com/blog/*
// @require        http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js
// @version        1.0
// ==/UserScript==
// Generated by CoffeeScript 1.4.0
(function() {
  var process, shouldHide;

  shouldHide = function($post) {
    return !$post.find(".post_title").length || $post.find(".post_text_wrapper p").length > 0;
  };

  $().ready(function() {
    var observer;
    $(".post:not(.new_post)").each(function(index, post) {
      return process(post);
    });
    $(".notification").each(function(index, notification) {
      return process(notification);
    });
    observer = new WebKitMutationObserver(function(mutations) {
      var mutation, newNode, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = mutations.length; _i < _len; _i++) {
        mutation = mutations[_i];
        _results.push((function() {
          var _j, _len1, _ref, _results1;
          _ref = mutation.addedNodes;
          _results1 = [];
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            newNode = _ref[_j];
            _results1.push(process(newNode));
          }
          return _results1;
        })());
      }
      return _results;
    });
    return observer.observe(document.getElementById("posts"), {
      childList: true
    });
  });

  process = function(post) {
    var $post;
    jQuery.fx.off = true;
    if ($(post).hasClass("notification")) {
      post.remove();
    }
    $post = $(post);
    if (shouldHide($post)) {
      return $post.remove();
    }
  };

}).call(this);
