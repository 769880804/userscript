// ==UserScript==
// @name           Danbooru Search Filtering
// @description    Client-side filtering of Danbooru tag search results
// @namespace      porond_robot
// @include        http://*.donmai.us/post
// @include        http://*.donmai.us/post?*
// @include        http://*.donmai.us/post/
// @include        http://*.donmai.us/post/?*
// @include        http://*.donmai.us/post/index
// @include        http://*.donmai.us/post/index?*
// ==/UserScript==


// @exclude        http://*.donmai.us/post/show*


/*
This script was compiled from several different files. That's why it looks like
it lacks enough line-breaks.
This script was not meant to be edited in this file.
If you have a better idea for putting html and js files into one script file,
you can send it to me.
*/


//*********************************************************

//this runs the script in the scope of the page
//this method needs the whole script to be in the "else" block

if (typeof(arguments) != "undefined"
  && typeof(arguments.callee) == "function"
  //&& typeof(__PAGE_SCOPE_RUN__) == "undefined"
) {
  //var source = arguments.callee.toString();
  var source = arguments.callee
    .toString().match(/^function\s+\w*\([^\)]*\)\s*\{\s*\n([^]*)\n?\}$/)[1];
  
  document.location = "javascript:"
    //+ escape( "var __PAGE_SCOPE_RUN__ = true;\n" )
    //+ escape( "(" + source + ")()" )
    + escape( source )
    + escape( ";void 0;" );
}
else {

//*********************************************************




function inject_html() {
  var span = document.createElement("span");
  span.innerHTML = (new String("\n\n\n\n<style type=\"text/css\">\nspan#valueeditor span {\n  display: none;\n}\nspan#valueeditor[type=\"string\"] span.string {\n  display: inline;\n}\nspan#valueeditor[type=\"numerical\"] span.numerical {\n  display: inline;\n}\nspan#valueeditor[type=\"date\"] span.date {\n  display: inline;\n}\nspan#valueeditor[type=\"none\"] span.none {\n  display: inline;\n}\n</style>\n\n\n\n\n\n\n\n\n\n\n\n\n<div id=\"rulesample\" style=\"display: none;\">\n\n<label title=\"Active in filtering\"><input type=\"checkbox\" id=\"filtercheck\" checked\n  >Act</input></label> |\n<label title=\"Negated in filtering\"><input type=\"checkbox\" id=\"negatecheck\"\n  >Neg</input></label> |\n<label title=\"Use in query to server\"><input type=\"checkbox\" id=\"servercheck\"\n  >Srv</input></label>\n<select id=\"serverquerynumber\" title=\"Query number\">\n  <option>1</option>\n  <option>2</option>\n  <option>3</option>\n  <option>4</option>\n  <option>5</option>\n  <option>6</option>\n  <option>7</option>\n  <option>8</option>\n</select> |\n<select id=\"type\" onchange=\"filtereditor.typechange(this.parentNode, \n  this.getElementsByTagName('option')[this.selectedIndex].value)\"\n  title=\"Filter type\" style=\"display: none;\">\n  <option value=\"danbooru\">Danbooru style</option>\n  <option value=\"filesize\">Filesize</option>\n  <option value=\"width\">Width</option>\n  <option value=\"height\">Height</option>\n  <option value=\"id\">Post ID</option>\n  <option value=\"parent_id\">Parent ID</option>\n  <option value=\"date\">Date</option>\n  <option value=\"source\">Source URL</option>\n</select>\n<span id=\"valueeditor\" type=\"string\">\n  <span class=\"string\">\n    <input id=\"string\" type=\"text\" size=\"32\"/>\n  </span>\n  <span class=\"numerical\">\n    exact:<input id=\"exact\" type=\"text\" size=\"8\"/> |\n    min:<input id=\"min\" type=\"text\" size=\"8\"/> |\n    max:<input id=\"max\" type=\"text\" size=\"8\"/>\n  </span>\n  <span class=\"date\">\n    YYYY/MM/DD: <input id=\"date\" type=\"text\" size=\"24\"/>\n  </span>\n  <span class=\"none\">\n    not recognized, go and fix the script\n  </span>\n</span>\n<input type=\"button\" onclick=\"filtereditor.deleterule(this.parentNode);\" value=\"Delete\"\n  title=\"Remove this line\"/>\n\n</div>\n\n<div id=\"editormain\">\n\n<div id=\"newruleposition\"></div>\n<input type=\"button\" onclick=\"void filtereditor.addnewrule();\" value=\"Add\"\n  title=\"Add a new line\"/>\n|\n<input type=\"button\" onclick=\"filtereditor.undelete();\" value=\"Undelete\"\n  title=\"Undelete last deleted line\"/>\n<br/>\n<label title=\"Number of posts returned in one batch\">\nquery limit:<input id=\"query_limit\" type=\"text\" size=\"4\" value=\"50\"/>\n</label>\n|\n<label title=\"Use blacklist from user account\"\n  ><input type=\"checkbox\" id=\"blacklistcheck\" checked>use blacklist</input></label>\n<br/>\n<input type=\"button\" onclick=\"filtereditor.testsend(this);\" value=\"Start\"\n  id=\"sendbutton\" title=\"Begin sending queries to server\"/>\n<label title=\"Streaming mode. Result will be displayed while loading\"\n  ><input type=\"checkbox\" id=\"streamcheck\" chec ked>streaming</input></label>\n<input type=\"button\" onclick=\"stopload();\" value=\"Stop\" title=\"Stop sending queries\"/>\n|\n<input type=\"button\" onclick=\"searcher.testfilter();\" value=\"Test\"\n  title=\"Run filters for debugging\"/>\n<input type=\"button\"\n  onclick=\"runbutton();\"\n  value=\"Run\" title=\"Run filtering and show results\"/>\n<input type=\"button\"\n  onclick=\"searcher.clearresult(debugdata.obj);\"\n  value=\"Clear\" title=\"Clear results, so new filters may be used\"/>\n\n\n|\n\n<input type=\"button\" onclick='var sty=document.getElementById(\"usage_notes\").style;\n  if (sty.display){sty.display=\"\"}else{sty.display=\"none\"}'\n  title=\"Show/hide notes\"\n  value=\"Notes\"/>\n<input type=\"button\" onclick='var sty=document.getElementById(\"message\").style;\n  if (sty.display){sty.display=\"\"}else{sty.display=\"none\"}'\n  title=\"Show/hide debug messages\"\n  value=\"Debug\"/>\n<input type=\"button\" onclick='var sty=document.getElementById(\"danbooru_interface\").style;\n  if (sty.display){sty.display=\"\"}else{sty.display=\"none\"}'\n  title=\"Show/hide danbooru interface (mode select, status message, quick edit)\"\n  value=\"Danbooru\"/>\n<input type=\"button\" onclick='var sty=document.getElementById(\"saveload\").style;\n  if (sty.display){sty.display=\"\";saveload.generate_delayed()}else{sty.display=\"none\"}'\n  title=\"Show/hide filter save/load interface\"\n  value=\"Save/load\"/>\n<input type=\"button\" onclick='taglister.make(searcher.collecttaglist(\n  debugdata.obj.imagedata, searcher.testfilter()))'\n  title=\"Make tag list of result posts (uses current filters)\"\n  value=\"Tag list\"/>\n\n\n</div>\n\n<div id=\"saveload\" style=\"display: none\">\n\n<textarea id=\"saveload_textbox\" cols=\"60\" rows=\"6\"></textarea>\n<br>\n<input type=\"button\" onclick=\"saveload.generate()\"\n  title=\"Generate fresh contents for the textbox\"\n  value=\"Refresh\">\n<input type=\"button\" onclick=\"saveload.load()\"\n  title=\"Load filters from textbox\"\n  value=\"Load\">\n<input type=\"button\" onclick=\"saveload.box_select_all()\"\n  title=\"Select all in textbox\"\n  value=\"Select all\">\n</div>\n\n<div id=\"usage_notes\" style=\"display: none\">\n<ul><li>\n</li><li>\nFiltering based on tag-types (chartags:2) is not possible, as that information\nis not available in a post search.\n</li><li>\nPool information is only available when there was a query with that particular\npool.\n</li><li>\nNegated pool search (-pool:567) is not supported by the server, but it is\nsupported in filtering. (the server simply ignores such tags)\n</li><li>\nPool search combined with negated tags only is not supported by the server.\nThe server will return an error.\n</li><li>\nDon't use streaming mode for negated pool searches. The result may include\nimages from that pool. (this is also true for other searches that don't have\ntheir information in the post data)\n</li><li>\nSome searches (like \"source:\") are slow on the server, and may fail\nwith a HTTP 503 because of database timeout. Set \"query limit\"\nto a low value to avoid this error.\n</li><li>\nWhen you don't see any results in streaming mode and you are sure that there\nshould be results display (for example using only one filter, which is set to\n\"Act\" and \"Srv\"), it may be caused by an aliased tag. To avoid this you have to\nknow which tag was aliased, and disable \"Act\" on that filter line, because\nfilters can't follow aliases.\n\n</li></ul>\n</div><br/>\n\n\n\n\n\n<div id=\"message\" style=\"display: none\"></div>\n\n<div id=\"danbooru_interface\" style=\"display: none\">\n<span id=\"danbooru_mode_select\"></span>\n<span id=\"danbooru_quick_edit\"></span>\n<span id=\"danbooru_notice\"></span>\n</div>\n\n<div id=\"searcher-results\"></div>\n\n\n\n\n<script type=\"text/javascript\">\n//**********************************************************\n//forr\xE1s: danbooru_searcher.txt\n\n    searcher = {objcounter:0, obj:{}, imagedata:{}, querycache:{}, start_download:(function (url, obj) {var xhr = new XMLHttpRequest();xhr.onload = searcher.download_success;xhr.onerror = searcher.download_failure;xhr.obj = obj;debugdata.xhr = xhr;xhr.url = url;try {xhr.open(\"GET\", url);} catch (error) {message(\"Could not start loading (XHR.open refused)\");obj.status = \"error\";searcher.endload(obj);}xhr.setRequestHeader(\"X-request-source\", \"search-filtering\");xhr.send(null);obj.status = \"loading\";searcher.updateloadstatus(obj);}), download_success:(function (event) {var xhr = event.target;var obj = xhr.obj;obj.status = null;if (xhr.responseXML) {message(\"Loaded: \" + xhr.url);if (xhr.status == 200) {searcher.process_xml(xhr);} else {if (xhr.responseXML.firstChild.tagName == \"response\" && xhr.responseXML.firstChild.getAttribute(\"success\") == \"false\") {message(\"Error: \" + xhr.responseXML.firstChild.getAttribute(\"reason\"));obj.status = \"error\";searcher.endload(obj);} else {message(\"Got HTTP \" + xhr.status + \", cannot process response\");obj.status = \"error\";searcher.endload(obj);}}} else {message(\"Nothing to process\" + \" (HTTP \" + xhr.status + \")\");obj.status = \"error\";searcher.endload(obj);}}), download_failure:(function (event) {var xhr = event.target;var obj = xhr.obj;message(\"Failed to load\");obj.status = \"error\";searcher.endload(obj);}), process_xml:(function (xhr) {var obj = xhr.obj;var req = obj.requests[obj.requestnum];searcher.process_xml_imagedata(xhr.responseXML, req.query, obj.imagedata, obj.newlist);req.nextpage++;var postsnode = xhr.responseXML.getElementsByTagName(\"posts\")[0];if (postsnode) {if (!(xhr.responseXML.getElementsByTagName(\"post\").length)) {req.end = true;message(\"Request ended: \" + obj.requestnum);}}obj.requestnum++;obj.timeout = setTimeout(searcher.nextload, loaddelay, obj);obj.status = \"loading\";searcher.updateloadstatus(obj);if (obj.requestnum == obj.requests.length) {searcher.addtoresult(obj, obj.newlist);obj.newlist = {};}}), addtoresult:(function (obj, newlist) {if (obj.blacklisting && typeof (blacklistrules) != \"undefined\") {for (var i = 0; i < blacklistrules.length; i++) {searcher.run_filter_all(obj.imagedata, newlist, blacklistrules[i], false);for (var id in newlist) {if (newlist[id]) {obj.imagedata[id].blacklisted = true;}newlist[id] = true;}}}if (obj.streaming) {setTimeout((function () {searcher.run_filter_all(obj.imagedata, newlist, obj.rules);obj.has_run_filters = true;searcher.insertintopage(obj, newlist);searcher.updateloadstatus(obj);}), 500);}}), copylist:(function (list) {var res = {};for (var id in list) {if (list[id]) {res[id] = true;}}return res;}), copylistany:(function (list) {var res = {};for (var id in list) {res[id] = true;}return res;}), process_date_from_XML:(function (string) {var m = string.match(/^\\w+\\s(\\w+)\\s(\\d+)\\s(\\d+):(\\d+):(\\d+)\\s([\\-\\+]?\\d+)\\s(\\d+)/);if (m) {var self = arguments.callee;var monthnames = self.monthnames || (self.monthnames = {Jan:1, Feb:2, Mar:3, Apr:4, May:5, Jun:6, Jul:7, Aug:8, Sep:9, Oct:10, Nov:11, Dec:12});var date = {year:Number(m[7]), month:monthnames[m[1]], day:Number(m[2]), hour:m[3], minute:m[4], second:m[5]};return date;} else {return null;}}), process_xml_imagedata:(function (xml, query, image_data, newlist) {var postlist = xml.getElementsByTagName(\"post\");for (var i = 0, len = postlist.length; len; i++, len--) {var post = postlist[i];var id = post.getAttribute(\"id\");if (!image_data[id]) {image_data[id] = {id:id, tags:post.getAttribute(\"tags\").split(/\\s+/), md5:post.getAttribute(\"md5\"), preview_file:post.getAttribute(\"preview_url\"), sample_file:post.getAttribute(\"sample_url\"), image_file:post.getAttribute(\"file_url\"), width:post.getAttribute(\"width\"), height:post.getAttribute(\"height\"), source_url:post.getAttribute(\"source\"), date:searcher.process_date_from_XML(post.getAttribute(\"created_at\")), filesize:post.getAttribute(\"file_size\"), parent_id:post.getAttribute(\"parent_id\"), has_children:post.getAttribute(\"has_children\") == \"true\", status:post.getAttribute(\"status\"), rating:post.getAttribute(\"rating\"), pool:{}, blacklisted:false};} else {image_data[id].tags = post.getAttribute(\"tags\").split(/\\s+/);image_data[id].parent_id = post.getAttribute(\"parent_id\");image_data[id].has_children = post.getAttribute(\"has_children\") == \"true\";image_data[id].source_url = post.getAttribute(\"source\");image_data[id].status = post.getAttribute(\"status\");image_data[id].blacklisted = false;}newlist[id] = true;if (has_main_danbooru_script) {var currentimage = image_data[id];Post.register({file_size:currentimage.filesize, file_url:currentimage.image_file, status:currentimage.status, height:currentimage.height, tags:post.getAttribute(\"tags\"), rating:currentimage.rating, source:currentimage.source_url, sample_url:currentimage.sample_file, created_at:post.getAttribute(\"created_at\"), has_children:currentimage.has_children, preview_url:currentimage.preview_file, md5:currentimage.md5, id:currentimage.id, width:currentimage.width, author:post.getAttribute(\"author\")});}}if (query) {var pools = query.match(/pool:\\d+/g);}if (pools) {for (var poolnum = 0; poolnum < pools.length; poolnum++) {var pool_id = pools[poolnum].match(/\\d+/)[0];for (var i = 0, len = postlist.length; len; i++, len--) {var post = postlist[i];var id = post.getAttribute(\"id\");image_data[id].pool[pool_id] = true;}}}}), previewhtml:(function (info) {var class = [\"preview\"];if (use_preview_borders) {if (info.status == \"pending\") {class.push(\"pending\");}if (info.status == \"flagged\") {class.push(\"flagged\");}if (info.status == \"deleted\") {class.push(\"deleted\");}if (info.has_children) {class.push(\"has-children\");}if (info.parent_id) {class.push(\"has-parent\");}}return \"<span class=\\\"thumb\\\"\" + \" id=\\\"p\" + info.id + \"\\\"\" + \">\" + \"<a href=\\\"\" + postlink + info.id + \"\\\"\" + ((has_main_danbooru_script) ? \" onclick=\\\"return PostModeMenu.click(\" + info.id + \")\\\"\" : \"\") + \"><img\" + \" class=\\\"\" + class.join(\" \") + \"\\\"\" + \" delayedsrc=\\\"\" + info.preview_file + \"\\\"\" + \" alt=\\\"\" + info.tags.join(\" \") + \"\\\"\" + \" title=\\\"\" + info.tags.join(\" \") + \"\\\"\" + \"/></a></span>\";}), process_number:(function (inp) {var match = inp.match(/^(\\d+(?:[\\.,]\\d+)?)(?:([kKmMgG])b?)?$/);if (match) {var num = Number(match[1].replace(\",\", \".\"));if (match[2]) {num *= (1 << 10 * (\"kmg\".indexOf(st) + 1 || \"KMG\".indexOf(st) + 1));}return num;} else {return null;}}), process_range:(function (inp) {var match = inp.match(/^(\\d+(?:[\\.,]\\d+)?(?:[kmg]b?)?)?(\\.\\.|[<>]=?)(\\d+(?:[\\.,]\\d+)?(?:[kmg]b?)?)?$/i);if (match) {var num1 = match[1] ? this.process_number(match[1]) : null;var num2 = match[3] ? this.process_number(match[3]) : null;if (match[2] == \"..\") {return {min:num1, max:num2};} else {if (match[2][0] == \"<\") {return {max:num2};} else {return {min:num2};}}} else {var res = this.process_number(inp);return {exact:res};}}), process_date:(function (inp) {var match = inp.match(/^(\\d{4})(?:[:\\-\\\\\\/\\.](\\d{1,2}))?(?:[:\\-\\\\\\/\\.](\\d{1,2}))?$/);if (match) {return ({year:match[1], month:match[2], day:match[3], hour:0, minute:0, second:0});} else {return null;}}), process_daterange:(function (inp) {var match = inp.match(/(\\d+(?:\\D\\d+){0,2}\\D?)?(\\.\\.|[<>]=?)(\\d+(?:\\D\\d+){0,2}\\D?)?/);if (match) {var date1 = match[1] ? this.process_date(match[1]) : null;var date2 = match[3] ? this.process_date(match[3]) : null;if (match[2] == \"..\") {return {min:date1, max:date2};} else {if (match[2][0] == \"<\") {return {max:date2};} else {return {min:date2};}}} else {var res = this.process_date(inp);return {exact:res};}}), process_textfilter:(function (inp) {return new RegExp(\"^\" + inp.replace(/[\\(\\)\\[\\]\\^\\$\\+\\.\\{\\}\\\\]/g, \"\\\\$&\").replace(/\\?/g, \".\").replace(/\\*/g, \".*?\") + \"$\", \"i\");}), process_tagfilter:(function (inp) {return new RegExp(\"(?:^|\\\\s)\" + inp.replace(/[\\(\\)\\[\\]\\^\\$\\+\\.\\{\\}\\\\]/g, \"\\\\$&\").replace(/\\?/g, \"\\\\S\").replace(/\\*/g, \"\\\\S*?\") + \"(?:\\\\s|$)\");}), process_danbooru_searchstring:(function (item) {var match = item.match(/^-?([a-z_]+):(.*)$/i);if (match) {if (match[1] == \"file_size\") {match[1] = \"filesize\";}if (match[1] == \"parent\") {match[1] = \"parent_id\";}switch (match[1]) {case \"filesize\":case \"width\":case \"height\":case \"id\":var res = searcher.process_range(match[2]);return {type:match[1], exact:res.exact, min:res.min, max:res.max, negate:(item[0] == \"-\"), text:item};break;case \"parent_id\":if (/\\w/i.test(match[2])) {var res = {exact:match[2]};} else {var res = searcher.process_range(match[2]);}return {type:match[1], exact:res.exact, min:res.min, max:res.max, negate:(item[0] == \"-\"), text:item};break;case \"date\":var res = searcher.process_daterange(match[2]);return {type:\"date\", exact:res.exact, min:res.min, max:res.max, negate:(item[0] == \"-\"), text:item};break;case \"source\":return {type:\"source_url\", regexp:searcher.process_textfilter(match[2]), negate:(item[0] == \"-\"), text:item};break;case \"pool\":return {type:\"pool\", pool_id:match[2], negate:(item[0] == \"-\"), text:\"pool:\" + match[2]};break;case \"status\":return {type:\"status\", statustext:match[2], negate:(item[0] == \"-\"), text:item};break;case \"rating\":return {type:\"rating\", rating:match[2][0] || \"\", negate:(item[0] == \"-\"), text:item};break;default:return null;}} else {if (/[\\?\\*]/.test(item)) {return {type:\"tag_approx\", regexp:searcher.process_tagfilter(item[0] != \"-\" ? item : item.slice(1)), negate:(item[0] == \"-\"), text:item, server:false};} else {if (item) {return {type:\"tag\", tagname:(item[0] != \"-\" ? item : item.slice(1)), negate:(item[0] == \"-\"), text:item, server:true};} else {return null;}}}}), run_filter:(function (imagedata, imagelist, rule, defaultresult) {if (!rule) {return;}var fn = searcher.getrulefunc(rule, defaultresult);for (var i in imagelist) {if (imagelist[i]) {imagelist[i] = fn(imagedata[i]);}}}), run_filter_all:(function (imagedata, imagelist, rules, defaultresult) {for (var i = 0; i < rules.length; i++) {searcher.run_filter(imagedata, imagelist, rules[i], defaultresult);}}), getrulefunc:(function (rule, defaultresult) {switch (rule.type) {case \"filesize\":case \"width\":case \"height\":case \"id\":return (function (info) {if ((rule.exact == null || info[rule.type] == rule.exact) && (rule.min == null || info[rule.type] >= rule.min) && (rule.max == null || info[rule.type] <= rule.max)) {return !rule.negate;}return rule.negate;});case \"parent_id\":if (rule.exact == \"none\") {return (function (info) {if (info.parent_id == \"\") {return !rule.negate;}return rule.negate;});} else {return (function (info) {if ((rule.exact == null || info.parent_id == rule.exact) && (rule.min == null || info.parent_id >= rule.min) && (rule.max == null || info.parent_id <= rule.max)) {return !rule.negate;}return rule.negate;});}case \"date\":if (rule.exact) {var time = rule.exact;return (function (info) {if (time.year == info.date.year && time.month == info.date.month && time.day == info.date.day) {return !rule.negate;}return rule.negate;});} else {var min = rule.min || {year:0, month:0, day:0};var max = rule.max || {year:9999, month:99, day:99};min = (Number(min.year) * 1000 + Number(min.month)) * 1000 + Number(min.day);max = (Number(max.year) * 1000 + Number(max.month)) * 1000 + Number(max.day);return (function (info) {var date = info.date;date = (Number(date.year) * 1000 + Number(date.month)) * 1000 + Number(date.day);if (min <= date && date <= max) {return !rule.negate;}return rule.negate;});}case \"tag\":if (rule.tagname) {return (function (info) {if (info.tags.indexOf(rule.tagname) != -1) {return !rule.negate;}return rule.negate;});} else {return (function () {return true;});}case \"tag_approx\":var testregexp = rule.regexp;return (function (info) {if (!rule.regexp || !rule.regexp.test) {return true;}if (testregexp.test(info.tags.join(\" \"))) {return !rule.negate;}return rule.negate;});case \"source_url\":return (function (info) {if (rule.regexp.test(info.source_url)) {return !rule.negate;}return rule.negate;});case \"pool\":return (function (info) {if (rule.pool_id in info.pool) {return !rule.negate;}return rule.negate;});case \"status\":return (function (info) {if (rule.statustext == \"any\" || rule.statustext == info.status) {return !rule.negate;}return rule.negate;});case \"rating\":return (function (info) {if (rule.rating == info.rating) {return !rule.negate;}return rule.negate;});default:if (defaultresult != undefined) {return (function () {return defaultresult;});} else {return (function () {return true;});}}}), make_start_list:(function (image_data) {var res = {};for (var i in image_data) {if (!image_data[i].blacklisted) {res[i] = true;}}return res;}), testfilter:(function () {var timeold = new Date();var query = filtereditor.collectrules();var rules = query.map(searcher.process_danbooru_searchstring);var list = searcher.make_start_list(debugdata.imagedata);message(\"Images: \" + list.__count__);searcher.run_filter_all(debugdata.imagedata, list, rules);var ar = [];for (var i in list) {if (list[i]) {ar.push(i);}}message(\"Result length: \" + ar.length);message(\"Result: \" + ar.join(\", \"));var timenew = new Date();message(\"**** Time: \" + ((timenew - timeold) / 1000) + \" sec\");return list;}), insertintopage:(function (obj, imagelist) {var div = obj.lastpage.div;var document = obj.document;var imagedata = obj.imagedata;var endmarker = obj.maindiv.getElementById(\"endmarker\");\nfunction insert() {if (st) {var span = document.createElement(\"span\");span.innerHTML = st;div.appendChild(span);st = \"\";if (endmarker) {div.appendChild(endmarker);}}}\nvar ar = [];for (var i in imagelist) {if (imagelist[i]) {ar.push(i);}}ar.sort(searcher.getsortfunc(\"id\", imagedata));ar.reverse();if (secondarysort) {ar.sort(searcher.getsortfunc(secondarysort, imagedata));}if (secondarysortreverse) {ar.reverse();}if (primarysort) {ar.sort(searcher.getsortfunc(primarysort, imagedata));}if (primarysortreverse) {ar.reverse();}var st = \"\";for (var i = 0; i < ar.length; i++) {var id = ar[i];var info = imagedata[id];if (!obj.results[id] && !info.blacklisted) {st += searcher.previewhtml(info);obj.lastpage.images.push(id);obj.results[id] = true;obj.resultcount++;if (obj.lastpage.images.length >= pagelength) {insert();searcher.makenewpage(obj);div = obj.lastpage.div;if (endmarker) {div.appendChild(endmarker);}}}}insert();delayedimgload();if (obj.lastpage.images.length >= pagelength) {searcher.makenewpage(obj);}}), getsortfunc:(function (sortmode, imagedata) {switch (sortmode) {case \"id\":return (function (id1, id2) {return id1 - id2;});case \"width\":case \"height\":case \"date\":return (function (id1, id2) {return imagedata[id1][sortmode] - imagedata[id2][sortmode];});default:return (function () {return 0;});}}), testdownload:(function (query, collectrules, mode, limit, blacklisting) {var requests = [];for (var querynum = 0; querynum < query.length; querynum++) {if (query[querynum] != null) {var match = query[querynum].join(\" \").match(/(?:^|\\s)debug:(\\S+)/i);if (match) {var url = debugurls[match[1]];} else {var url = baseurl;if (query[querynum].length) {url += \"?tags=\" + query[querynum].map(encodeURIComponent).join(\"+\");}if (isFinite(limit)) {url += \"&limit=\" + limit;}url += \"&page=1\";}requests.push({url:url, nextpage:1, results:0, end:false, count:0, limit:limit, query:query[querynum].sort().join(\" \")});}}var obj = {requests:requests, imagedata:debugdata.imagedata, requestnum:0, rules:collectrules.map(searcher.process_danbooru_searchstring), streaming:(mode == \"stream\"), needpage:0 + preload_pages, pages:[], newlist:{}, fullend:false, results:{}, resultcount:0, timeout:null, document:document, maindiv:null, status:null, id:\"search\" + String(searcher.objcounter++), blacklisting:blacklisting, has_run_filters:false};searcher.obj[obj.id] = obj;obj.timeout = \"starter\";searcher.findmaindiv(obj);searcher.preparemaindiv(obj);debugdata.obj = obj;searcher.nextload(obj);}), nextload:(function (obj) {obj.timeout = null;if (obj.fullend) {return;}if (obj.status != \"pause\" && obj.requestnum < obj.requests.length) {obj.status = null;var req = obj.requests[obj.requestnum];if (!req.end) {var url = req.url;url = url.replace(/page=\\d+/i, \"page=\" + req.nextpage);var cache = searcher.querycache[req.query];if (cache && cache[req.nextpage]) {searcher.process_xml({responseXML:cache[req.nextpage], obj:obj});} else {searcher.start_download(url, obj);}} else {obj.requestnum++;obj.timeout = setTimeout(searcher.nextload, 0, obj);}} else {obj.status = null;var i = 0;while (i < obj.requests.length) {if (!obj.requests[i].end) {break;}i++;}if (true && i < obj.requests.length) {obj.requestnum = i;if (!obj.streaming || obj.needpage >= obj.pages.length || (obj.pages[obj.needpage] && obj.pages[obj.needpage].images.length < pagelength * 0.75)) {obj.timeout = setTimeout(searcher.nextload, 0, obj);} else {obj.status = \"pause\";searcher.updateloadstatus(obj);}} else {obj.status = \"finished\";searcher.endload(obj);}}}), endload:(function (obj) {obj.fullend = true;var endmarker = obj.maindiv.getElementById(\"endmarker\");if (endmarker) {endmarker.innerHTML = \"<span style=\\\"position: relative; top: 70px\\\">End</span>\";}message(\"Ready.\");searcher.updateloadstatus(obj);filtereditor.locksendbutton(false);}), makenewpage:(function (obj) {var document = obj.document;var pagenum = obj.pages.length;var page = {div:null, images:[]};page.div = document.createElement(\"div\");page.div.setAttribute(\"id\", \"page\" + pagenum);page.div.setAttribute(\"class\", \"pagediv\");obj.maindiv.getElementById(\"pagediv\").appendChild(page.div);var linkdiv1 = obj.maindiv.getElementById(\"pagelinks1\");var linkdiv2 = obj.maindiv.getElementById(\"pagelinks2\");var html = \"<a class=\\\"pagelink\\\" page=\\\"\" + pagenum + \"\\\" href=\\\"javascript:;\\\"\" + \"onclick=\\\"searcher.activatepage(this)\\\"\" + \">\" + (pagenum + 1) + \"</a>\";if (linkdiv1) {var span = document.createElement(\"span\");span.innerHTML = html;linkdiv1.appendChild(document.createTextNode(\" \"));linkdiv1.appendChild(span);}if (linkdiv2) {var span = document.createElement(\"span\");span.innerHTML = html;linkdiv2.appendChild(document.createTextNode(\" \"));linkdiv2.appendChild(span);}obj.pages[pagenum] = page;obj.lastpage = page;}), findmaindiv:(function (obj) {var document = obj.document;var node = document.getElementById(\"searcher-results\");if (node) {obj.maindiv = document.createElement(\"div\");node.appendChild(obj.maindiv);} else {obj.maindiv = document.evaluate(\"//div[@class=\\\"content\\\"]/div[last()-1]\", document, null, 9, null).singleNodeValue;if (obj.maindiv) {obj.maindiv.innerHTML = \"\";} else {obj.maindiv = document.createElement(\"div\");document.body.appendChild(obj.maindiv);}}}), preparemaindiv:(function (obj) {var maindiv = obj.maindiv;var document = obj.document;maindiv.setAttribute(\"id\", obj.id + \"-maindiv\");maindiv.setAttribute(\"obj_id\", obj.id);maindiv.setAttribute(\"class\", \"separate_box\");\nfunction makearrowdiv() {var arrowdiv = document.createElement(\"div\");arrowdiv.setAttribute(\"class\", \"pagelinks\");for (var i = 1; i >= 0; i--) {var a = document.createElement(\"a\");a.textContent = (i ? \"<<\" : \">>\");a.setAttribute(\"class\", \"pagelink\");a.setAttribute(\"href\", \"javascript:void 0;\");a.setAttribute(\"onclick\", \"searcher.activatepage(this)\");a.setAttribute(\"page\", (i ? \"-1\" : \"+1\"));arrowdiv.appendChild(a);}return arrowdiv;}\nvar statusdiv = document.createElement(\"div\");statusdiv.setAttribute(\"id\", \"statusdiv\");statusdiv.setAttribute(\"class\", \"statusdiv\");maindiv.appendChild(statusdiv);var linkdiv = document.createElement(\"div\");linkdiv.setAttribute(\"id\", \"pagelinks1\");linkdiv.setAttribute(\"class\", \"pagelinks\");maindiv.appendChild(linkdiv);var arrowdiv = makearrowdiv();maindiv.appendChild(arrowdiv);var pagediv = document.createElement(\"div\");pagediv.setAttribute(\"id\", \"pagediv\");maindiv.appendChild(pagediv);var arrowdiv = makearrowdiv();maindiv.appendChild(arrowdiv);var linkdiv = document.createElement(\"div\");linkdiv.setAttribute(\"id\", \"pagelinks2\");linkdiv.setAttribute(\"class\", \"pagelinks\");maindiv.appendChild(linkdiv);searcher.makenewpage(obj);searcher.activatepage(maindiv, 0);var endmarker = document.createElement(\"span\");endmarker.setAttribute(\"id\", \"endmarker\");endmarker.setAttribute(\"class\", \"thumb\");endmarker.innerHTML = \"<span style=\\\"position: relative; top: 70px\\\">Loading...</span>\";obj.lastpage.div.appendChild(endmarker);}), activatepage:(function (node, pagenum) {var document = node.ownerDocument;var maindiv = node;while (maindiv && !/\\-maindiv$/.test(maindiv.getAttribute(\"id\"))) {maindiv = maindiv.parentNode;}if (!maindiv) {return;}var currentpage = 0;var page = document.evaluate(\"div[@selected]\", maindiv.getElementById(\"pagediv\"), null, 9, null).singleNodeValue;if (page) {page.removeAttribute(\"selected\");var id = page.getAttribute(\"id\");if (id) {var match = id.match(/^page(\\d+)/);}if (match) {var currentpage = Number(match[1]);}}for (var i in {1:null, 2:null}) {var linkdiv = maindiv.getElementById(\"pagelinks\" + i);if (linkdiv) {var pagelink = document.evaluate(\"descendant::a[@selected]\", linkdiv, null, 9, null).singleNodeValue;if (pagelink) {pagelink.removeAttribute(\"selected\");}}}if (pagenum == undefined) {var pagenum = node.getAttribute(\"page\");if (/^[\\+\\-]\\d+$/.test(pagenum)) {if (/^\\+/.test(pagenum)) {pagenum = currentpage + 1;} else {pagenum = currentpage - 1;}} else {}}if (!isFinite(pagenum)) {pagenum = 0;}pagenum = Math.min(pagenum, maindiv.getElementById(\"pagediv\").childNodes.length - 1);pagenum = Math.max(pagenum, 0);var page = maindiv.getElementById(\"page\" + pagenum);if (page) {page.setAttribute(\"selected\", true);}for (var i in {1:null, 2:null}) {var linkdiv = maindiv.getElementById(\"pagelinks\" + i);if (linkdiv) {var pagelink = document.evaluate(\"descendant::a[@page=\\\"\" + pagenum + \"\\\"]\", linkdiv, null, 9, null).singleNodeValue;if (pagelink) {pagelink.setAttribute(\"selected\", true);}}}if (typeof (searcher) != \"undefined\" && maindiv.hasAttribute(\"obj_id\")) {searcher.needload(searcher.obj[maindiv.getAttribute(\"obj_id\")], pagenum);}}), needload:(function (obj, pagenum) {obj.needpage = pagenum + preload_pages;if (!obj.timeout) {obj.timeout = setTimeout(searcher.nextload, 0, obj);}}), collecttaglist:(function (imagedata, imagelist) {var taglist = {};for (var id in imagelist) {if (imagelist[id]) {var info = imagedata[id];for (var tagnum = 0; tagnum < info.tags.length; tagnum++) {var tagname = info.tags[tagnum];if (typeof (taglist[tagname]) != \"object\") {taglist[tagname] = [];}taglist[tagname].push(id);}}}var tagarray = [];for (var tagname in taglist) {tagarray.push(tagname);}tagarray.sort();tagarray.sort((function (name1, name2) {return taglist[name1].length - taglist[name2].length;}));tagarray.reverse();return {images:taglist, list:tagarray};}), updateloadstatus:(function (obj) {var maindiv = obj.maindiv;var statusdiv = maindiv.getElementById(\"statusdiv\");var st = \"\";st += \"Results: \";st += (obj.has_run_filters ? obj.resultcount : \"--\");st += \"/\";st += String(obj.imagedata.__count__);st += \" - \";if (obj.status == \"error\") {st += \"Error\";} else {if (obj.fullend) {st += \"Finished\";} else {if (obj.status == \"loading\") {st += \"Loading\";} else {if (obj.status == \"pause\") {st += \"Paused\";} else {st += \"????\";}}}}statusdiv.textContent = st;}), stopload:(function (obj) {searcher.endload(obj);}), reset_blacklisted:(function (imagedata) {for (var id in imagedata) {imagedata[id].blacklisted = false;}}), clearresult:(function (obj) {obj.pages = [];obj.newlist = {};obj.results = {};obj.has_run_filters = false;obj.resultcount = 0;var endmarker = obj.maindiv.getElementById(\"endmarker\");if (endmarker) {var text = endmarker.innerHTML;}obj.maindiv.innerHTML = \"\";searcher.preparemaindiv(obj);searcher.updateloadstatus(obj);var endmarker = obj.maindiv.getElementById(\"endmarker\");if (endmarker && text != null) {endmarker.innerHTML = text;}})};\n    extrastyle = \".pagediv {display: none}.pagediv[selected] {display: block}.pagelinks {padding: 8px; clear: both; text-align: center; /*float: left*/}.pagelink {margin: 0 3px; padding: 2px 6px; font-weight: normal;border: 1px solid #EAEAEA; line-height: 30px}.pagelink[selected] {font-weight: bold; border-color: black}.statusdiv {text-align: center}img.deleted {border: 3px dashed #F00}.separate_box {padding: 4px; margin: 4px; border: 1px solid black}\";\n    var style = document.createElement(\"style\");\n    style.innerHTML = extrastyle;\n    document.body.appendChild(style);\n    debugbool = false;\n    debugdata = {imagedata:{}};\n    debugurls = {touhou:\"http://localhost:5555/sample/touhou_page=1.xml\", rapattu:\"http://localhost:5555/sample/rapattu_page=1.xml\", pool:\"http://localhost:5555/sample/pool-1073_page=1.xml\", error:\"http://localhost:5555/doesnotexist.xml\", mizu:\"http://localhost:5555/sample/mizu_cirno.xml\"};\n    primarysort = null;\n    primarysortreverse = false;\n    secondarysort = null;\n    secondarysortreverse = false;\n    loaddelay = 3000;\n    pagelength = 8;\n    preload_pages = 1;\n    use_preview_borders = true;\n    baseurl = \"http://localhost:5555/index.xml\";\n    postlink = \"http://danbooru.donmai.us/post/show/\";\n    tag_baseurl = \"http://danbooru.donmai.us/wiki/show?title=\";\n    blacklist_raw = \"multiple_girls, *reimu, *marisa, *flandre\";\n    has_main_danbooru_script = false;\n    if (!/localhost/i.test(location.host) && !/^file:/i.test(location.href)) {\n        baseurl = \"/post/index.xml\";\n        postlink = \"/post/show/\";\n        tag_baseurl = \"/wiki/show?title=\";\n        blacklist_raw = decodeURIComponent(getcookie(\"blacklisted_tags\").replace(/\\+/g, \" \"));\n        has_main_danbooru_script = (typeof (Post) != \"undefined\") && (\"register\" in Post);\n    }\n    blacklistrules = convertblacklist(blacklist_raw);\n\n    function convertblacklist(inp) {\n        return inp.split(/[,&\\n]\\s*/).filter(Boolean).map((function (val) {return val.split(/\\s+/).filter(Boolean).map(searcher.process_danbooru_searchstring);}));\n    }\n\n\n    function getcookie(key) {\n        var ar = document.cookie.split(/;\\s+/);\n        var rx = new RegExp(\"^\" + key + \"=\" + \"(.*)\" + \"$\");\n        var match;\n        for (var i = 0; i < ar.length; i++) {\n            if (match = ar[i].match(rx)) {\n                return match[1];\n            }\n        }\n        return \"\";\n    }\n\n\n    function onload() {\n        filtereditor.loadrule({type:\"danbooru\", act:false, srv:true, string:\"debug:touhou\", querynum:0});\n        filtereditor.loadrule({type:\"danbooru\", act:true, srv:false, string:\"*kogasa\", querynum:0});\n    }\n\n\n    function kill() {\n        var obj = debugdata.obj;\n        searcher.stopload(obj);\n    }\n\n    stopload = kill;\n\n    function delayedimgload(run) {\n        var self = arguments.callee;\n        if (!self.timeout) {\n            self.timeout = setTimeout(self, 200, true);\n        }\n        if (!run) {\n            return;\n        }\n        self.timeout = null;\n        var imagecount = 4;\n        for (var i = imagecount; i; i--) {\n            var img = document.evaluate(\"//img[@delayedsrc]\", document.body, null, 9, null).singleNodeValue;\n            if (img) {\n                img.setAttribute(\"src\", img.getAttribute(\"delayedsrc\"));\n                img.removeAttribute(\"delayedsrc\");\n            } else {\n                return;\n            }\n        }\n        self.timeout = setTimeout(self, 200, true);\n    }\n\n\n\n//**********************************************************\n//forr\xE1s: danbooru_url_to_filter.txt\n\n    var url_to_filter_active = true;\n\n    function inputbox_listener(event) {\n        if (!url_to_filter_active) {\n            return;\n        }\n        var inputbox = event.originalTarget;\n        var text = inputbox.value;\n        var link_rx = /https?:\\/\\/(?:(?:[\\w_\\-\\+]+\\.)*\\w+(?::\\d+)?)\\/\\S*/gi;\n        var link_func = (function (item) {var m;if (m = item.match(/[\\?&](?:tags|title)=([^#&]+)/i)) {return m[1].split(\"+\").map(decodeURIComponent).join(\" \");} else {if (m = item.match(/^https?:\\/\\/[^\\/]+\\/post\\/show\\/(\\d+)/i)) {return \"id:\" + m[1];} else {if (m = item.match(/^https?:\\/\\/[^\\/]+\\/pool\\/show\\/(\\d+)/i)) {return \"pool:\" + m[1];} else {return item;}}}});\n        text = text.replace(link_rx, link_func);\n        inputbox.value = text;\n    }\n\n\n    function url_to_filter_listen_on_inputbox(node) {\n        node.addEventListener(\"input\", inputbox_listener, false);\n    }\n\n\n\n//**********************************************************\n//forr\xE1s: danbooru_filtereditor_saveload.txt\n\n    function make_filtereditor_text() {\n        var rules = filtereditor.saverule_all();\n        var text = rules.map((function (rule) {return (\"\" + (rule.act ? \"+\" : \"-\") + \"act\" + \" \" + (rule.neg ? \"+\" : \"-\") + \"neg\" + \" \" + (rule.srv ? \"+\" : \"-\") + \"srv\" + \":\" + rule.querynum + \" \" + rule.string);})).join(\"\\n\");\n        return text;\n    }\n\n\n    function parse_filtereditor_text(text) {\n        var rules = text.split(\"\\n\").filter(Boolean).map((function (item) {var switches = item.match(/^((?:[\\-\\+](?:act|neg|srv:?\\S*)(?:\\s+|$))*)/i) || [\"\"];switches = switches[0];item = item.slice(switches.length);return ({act:(switches.match(/[\\-\\+]act/) || [\"\"])[0][0] == \"+\", neg:(switches.match(/[\\-\\+]neg/) || [\"\"])[0][0] == \"+\", srv:(switches.match(/[\\-\\+]srv/) || [\"\"])[0][0] == \"+\", querynum:(switches.match(/[\\-\\+]srv:?(\\S*)/) || [\"\"])[1], type:\"danbooru\", string:item});}));\n        return rules;\n    }\n\n\n\n//**********************************************************\n//forr\xE1s: danbooru_searcher_taglist.txt\n\n    taglister = {counter:0, lists:{}, pagelength:20, make:(function (taglist) {var div = document.createElement(\"div\");var id = \"taglist\" + (taglister.counter++);div.setAttribute(\"id\", id);div.setAttribute(\"class\", \"separate_box\");insertpos = document.getElementById(\"searcher-results\");insertpos.appendChild(div);taglister.store(id, taglist);taglister.preparediv(div, id);taglister.showpage(id, 0);}), store:(function (id, taglist) {var obj = taglister.lists[id] = taglist;obj.pagenum = 0;obj.pagemax = Math.floor(obj.list.length / taglister.pagelength);}), preparediv:(function (div, id) {var header = document.createElement(\"div\");header.innerHTML = \"\" + \"<div>\" + \"<span id=\\\"status\\\"></span>\" + \" <input type=\\\"button\\\" value=\\\"Delete\\\"\" + \" title=\\\"Remove this listing\\\"\" + \" onclick=\\\"taglister.remove('\" + id + \"')\\\">\" + \"</div>\" + \"<div>\" + \"<label title=\\\"Page controls\\\">page: </label>\" + \"<a href=\\\"javascript:void 0;\\\" class=\\\"pagelink\\\"\" + \" onclick=\\\"taglister.showpage('\" + id + \"', 0)\\\">first</a>\" + \"<a href=\\\"javascript:void 0;\\\" class=\\\"pagelink\\\"\" + \" onclick=\\\"taglister.turnpage('\" + id + \"', -100)\\\">-100</a>\" + \"<a href=\\\"javascript:void 0;\\\" class=\\\"pagelink\\\"\" + \" onclick=\\\"taglister.turnpage('\" + id + \"', -10)\\\">-10</a>\" + \"<a href=\\\"javascript:void 0;\\\" class=\\\"pagelink\\\"\" + \" onclick=\\\"taglister.turnpage('\" + id + \"', -1)\\\">-1</a>\" + \"<input id=\\\"pagenum\\\" size=\\\"5\\\"/>\" + \"<a href=\\\"javascript:void 0;\\\" class=\\\"pagelink\\\"\" + \" onclick=\\\"taglister.turnpage('\" + id + \"', +1)\\\">+1</a>\" + \"<a href=\\\"javascript:void 0;\\\" class=\\\"pagelink\\\"\" + \" onclick=\\\"taglister.turnpage('\" + id + \"', +10)\\\">+10</a>\" + \"<a href=\\\"javascript:void 0;\\\" class=\\\"pagelink\\\"\" + \" onclick=\\\"taglister.turnpage('\" + id + \"', +100)\\\">+100</a>\" + \"<a href=\\\"javascript:void 0;\\\" class=\\\"pagelink\\\"\" + \" onclick=\\\"taglister.turnpage('\" + id + \"', +999999999)\\\">last</a>\" + \"</div>\" + \"<div>\" + \"<form onsubmit=\\\"taglister.jumptopage('\" + id + \"'); return false;\\\">\" + \"<label title=\\\"Jump to given page in tag-listing\\\">\" + \"jump to page </label>\" + \"<input id=\\\"jumptopagenum\\\" type=\\\"text\\\" size=\\\"4\\\"/>\" + \"<input type=\\\"submit\\\" value=\\\"Go\\\"/>\" + \"</form>\" + \"</div>\";div.appendChild(header);}), showpage:(function (id, pagenum) {var div = document.getElementById(id);var obj = taglister.lists[id];obj.pagenum = Math.max(Math.min(pagenum, obj.pagemax), 0);var pagelength = taglister.pagelength;var pos = obj.pagenum * pagelength;var list = obj.list.slice(pos, pos + pagelength);for (var i = 0; i < pagelength; i++) {var tagdiv = div.getElementById(\"tag\" + i);if (!tagdiv) {var tagdiv = document.createElement(\"div\");tagdiv.setAttribute(\"id\", \"tag\" + i);tagdiv.innerHTML = \"<a href=\\\"#\\\"></a> <span></span>\";div.appendChild(tagdiv);}var linknode = tagdiv.firstChild;var countnode = tagdiv.lastChild;if (i < list.length) {var tagname = list[i];var tagcount = obj.images[tagname].length;linknode.setAttribute(\"href\", tag_baseurl + encodeURIComponent(tagname));linknode.textContent = tagname;countnode.textContent = tagcount;} else {linknode.removeAttribute(\"href\");linknode.textContent = \"----\";countnode.textContent = \"-\";}}var pagenumnode = div.getElementById(\"pagenum\");pagenumnode.value = Number(obj.pagenum) + 1;var statusnode = div.getElementById(\"status\");statusnode.textContent = \"\" + String(obj.list.length) + \" tags\" + \", \" + \"list has \" + String(1 + obj.pagemax) + \" pages\";}), turnpage:(function (id, num) {var obj = taglister.lists[id];obj.pagenum += Number(num);taglister.showpage(id, obj.pagenum);}), jumptopage:(function (id) {var div = document.getElementById(id);var inputbox = div.getElementById(\"jumptopagenum\");taglister.showpage(id, Number(inputbox.value) - 1);}), remove:(function (id) {delete taglister.lists[id];var node = document.getElementById(id);node.parentNode.removeChild(node);})};\n\n\n//**********************************************************\n//forr\xE1s: danbooru_dev0001.htm\n\n    Element.prototype.getElementById = (function (id) {return this.ownerDocument.evaluate(\".//*[@id=\\\"\" + id + \"\\\"]\", this, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;});\n    filtereditor = {typechange:(function (rulenode, type) {var editortype;switch (type) {case \"danbooru\":case \"source\":editortype = \"string\";break;case \"filesize\":case \"width\":case \"height\":case \"id\":case \"parent_id\":editortype = \"numerical\";break;case \"date\":editortype = \"date\";break;default:editortype = \"none\";}var node = rulenode.getElementById(\"valueeditor\");node.setAttribute(\"type\", editortype);}), addnewrule:(function () {var rulesample = document.getElementById(\"rulesample\");var div = document.createElement(\"div\");div.setAttribute(\"id\", \"rule\" + Math.floor(Math.random() * 1000));div.setAttribute(\"class\", \"ruledef\");div.innerHTML = rulesample.innerHTML;var pos = document.getElementById(\"newruleposition\");pos.parentNode.insertBefore(div, pos);url_to_filter_listen_on_inputbox(div.getElementById(\"string\"));return div;}), deleterule:(function (node) {filtereditor.lastdeleted = {node:node, parent:node.parentNode, next:node.nextSibling};node.parentNode.removeChild(node);}), undelete:(function () {if (filtereditor.lastdeleted) {filtereditor.lastdeleted.parent.insertBefore(filtereditor.lastdeleted.node, filtereditor.lastdeleted.next);filtereditor.lastdeleted = null;}}), makeserverquery:(function () {var query = [];var p = document.evaluate(\"div/label/input[@id=\\\"servercheck\\\"]\", document.getElementById(\"editormain\"), null, 6, null);for (var itemnum = 0; itemnum < p.snapshotLength; itemnum++) {var checknode = p.snapshotItem(itemnum);var div = checknode.parentNode.parentNode;if (checknode.checked) {var querynum = div.getElementById(\"serverquerynumber\").selectedIndex;if (!query[querynum]) {query[querynum] = [];}var rawrules = this.makequeryfromeditor(div);if (!(rawrules instanceof Array)) {rawrules = [rawrules];}for (var i = 0; i < rawrules.length; i++) {if (rawrules[i]) {query[querynum].push(rawrules[i]);}}}}return query;}), makequeryfromeditor:(function (node) {var select = node.getElementById(\"type\");var type = select.getElementsByTagName(\"option\")[select.selectedIndex].value;switch (type) {case \"danbooru\":return node.getElementById(\"string\").value.split(/\\s+/);case \"filesize\":case \"width\":case \"height\":case \"id\":case \"parent_id\":var value = node.getElementById(\"exact\").value;if (!value) {var value = node.getElementById(\"min\").value + \"..\" + node.getElementById(\"max\").value;}return type + \":\" + value;case \"date\":var value = node.getElementById(\"date\").value;if (/\\d{4}(?:[:\\-\\\\\\/\\.]\\d{2}){2}/.test(value)) {return value.replace(/[:\\-\\\\\\/\\.]/g, \"-\");} else {return \"\";}default:return \"\";}}), collectrules:(function () {var rules = [];var p = document.evaluate(\"div/label/input[@id=\\\"filtercheck\\\"]\", document.getElementById(\"editormain\"), null, 6, null);for (var itemnum = 0; itemnum < p.snapshotLength; itemnum++) {var checknode = p.snapshotItem(itemnum);var div = checknode.parentNode.parentNode;var negatecheck = false;if (div.getElementById(\"negatecheck\").checked) {negatecheck = !negatecheck;}if (checknode.checked) {var rawrules = this.makequeryfromeditor(div);if (!(rawrules instanceof Array)) {rawrules = [rawrules];}for (var i = 0; i < rawrules.length; i++) {var rule = rawrules[i];if (rule) {var negate = negatecheck;if (rule[0] == \"-\") {rule = rule.slice(1);negate = !negate;}rules.push(negate ? \"-\" + rule : rule);}}}}return rules;}), testsend:(function (buttonnode) {if (typeof (searcher) != \"undefined\") {var query = this.makeserverquery();var streamnode = document.getElementById(\"streamcheck\");var limitnode = document.getElementById(\"query_limit\");var blacklistnode = document.getElementById(\"blacklistcheck\");searcher.testdownload(query, filtereditor.collectrules(), (streamnode.checked ? \"stream\" : \"limit\"), limitnode.value, (blacklistnode.checked ? true : false));filtereditor.locksendbutton(true);return;message(\"Empty query\");return;}var st = \"\";var query = this.makeserverquery();for (var i = 0; i < query.length; i++) {if (query[i]) {st += \"\\n\" + query[i].join(\" \");}}var div = document.createElement(\"div\");div.innerHTML = \"<pre>\" + (Math.floor(Math.random() * 10) + \": \") + st + \"</pre>\";buttonnode.parentNode.insertBefore(div, buttonnode.nextSibling);}), locksendbutton:(function (lock) {return;var button = document.getElementById(\"sendbutton\");if (lock) {button.setAttribute(\"disabled\", \"\");} else {button.removeAttribute(\"disabled\");}}), saverule:(function (node) {var rule = {};rule.act = node.getElementById(\"filtercheck\").checked;rule.neg = node.getElementById(\"negatecheck\").checked;rule.srv = node.getElementById(\"servercheck\").checked;var querynode = node.getElementById(\"serverquerynumber\");rule.querynum = querynode.selectedIndex;var select = node.getElementById(\"type\");var type = select.getElementsByTagName(\"option\")[select.selectedIndex].value;rule.type = type;rule.string = node.getElementById(\"string\").value;rule.exact = node.getElementById(\"exact\").value;rule.min = node.getElementById(\"min\").value;rule.max = node.getElementById(\"max\").value;rule.date = node.getElementById(\"date\").value;return rule;}), loadrule:(function (rule) {var node = filtereditor.addnewrule();node.getElementById(\"filtercheck\").checked = !!rule.act;node.getElementById(\"negatecheck\").checked = !!rule.neg;node.getElementById(\"servercheck\").checked = !!rule.srv;var querynode = node.getElementById(\"serverquerynumber\");querynode.selectedIndex = rule.querynum ? rule.querynum : 0;if (rule.type) {var select = node.getElementById(\"type\");var options = select.getElementsByTagName(\"option\");for (var i = 0, len = options.length; len; i++, len--) {if (options[i].value == rule.type) {select.selectedIndex = i;filtereditor.typechange(node, rule.type);break;}}}node.getElementById(\"string\").value = rule.string ? rule.string : \"\";node.getElementById(\"exact\").value = rule.exact ? rule.exact : \"\";node.getElementById(\"min\").value = rule.min ? rule.min : \"\";node.getElementById(\"max\").value = rule.max ? rule.max : \"\";node.getElementById(\"date\").value = rule.date ? rule.date : \"\";}), saverule_all:(function () {var pos = document.getElementById(\"newruleposition\");var parent = pos.parentNode;var rules = [];var nodes = parent.getElementsByTagName(\"div\");for (var i = 0, len = nodes.length; len; i++, len--) {var node = nodes[i];if (/^rule\\d+$/.test(node.getAttribute(\"id\"))) {var rule = filtereditor.saverule(node);rules.push(rule);}}return rules;}), loadmany:(function (rules) {for (var i = 0; i < rules.length; i++) {filtereditor.loadrule(rules[i]);}})};\n\n    function runbutton() {\n        var result = searcher.testfilter();\n        searcher.insertintopage(debugdata.obj, result);\n        debugdata.obj.has_run_filters = true;\n        searcher.updateloadstatus(debugdata.obj);\n    }\n\n\n\n//**********************************************************\n//forr\xE1s: danbooru_dev0001.htm\n\n    var saveload = {generate:(function () {var text = make_filtereditor_text();var textarea = document.getElementById(\"saveload_textbox\");textarea.value = text;}), generate_delayed:(function () {setTimeout(saveload.generate, 0);}), load:(function () {var textarea = document.getElementById(\"saveload_textbox\");var text = textarea.value;var rules = parse_filtereditor_text(text);filtereditor.loadmany(rules);}), box_select_all:(function () {var textarea = document.getElementById(\"saveload_textbox\");textarea.select();})};\n\n\n//**********************************************************\n//forr\xE1s: danbooru_dev0001.htm\n\n    function message(msg) {\n        var div = document.getElementById(\"message\");\n        div.appendChild(document.createElement(\"br\"));\n        div.appendChild(document.createTextNode(msg));\n    }\n\n\n\n</script>"));
  
  var node = document.getElementById("post-list");
  if (node) {
    var input = document.getElementById("tags");
    if (input) var tags = input.value;
    
    var modenode = document.getElementById("mode"); // <select>
    //if (modenode) modenode = modenode.parentNode; // <form>
    if (modenode) modenode = modenode.parentNode.parentNode; // <div>
    
    var quick_edit_node = document.getElementById("quick-edit");
    
    var message_node = document.getElementById("notice");
    
    node.innerHTML = "";
    node.appendChild(span);
    
    if (tags) {
      filtereditor.loadrule({type:"danbooru", act: true, srv: true,
        string: tags, querynum: 0});
    }
    
    if (modenode) {
      var insertplace = document.getElementById("danbooru_mode_select");
      if (insertplace) {
        insertplace.appendChild(modenode);
        //insertplace.innerHTML = modenode.innerHTML;
      }
    }
    
    if (quick_edit_node) {
      var insertplace = document.getElementById("danbooru_quick_edit");
      if (insertplace) {
        insertplace.appendChild(quick_edit_node);
      }
    }
    
    if (typeof(Post) != "undefined") {
      if (Post.posts) {
        Post.posts = new Hash();
      }
    }
    
    if (message_node) {
      var insertplace = document.getElementById("danbooru_notice");
      if (insertplace) {
        var hide_button = document.createElement("a");
        hide_button.setAttribute("href", "javascript: $(\"notice\").hide(); void 0;");
        hide_button.setAttribute("title", "Click to hide");
        //hide_button.textContent = "[X]";
        insertplace.appendChild(hide_button);
        //insertplace.appendChild(message_node);
        hide_button.appendChild(message_node);
      }
    }
  }
  else {
    if (document.body) {
      document.body.appendChild(span);
    }
  }
  
  var button = document.getElementById("injector-button");
  if (button) button.parentNode.removeChild(button);
}

//if (document.documentElement.tagName == "HTML") {
//if (document.body && document.getElementById("post-list")) {
if (document.body) {
  var button = document.createElement("input");
  button.setAttribute("id", "injector-button");
  button.setAttribute("type", "button");
  button.setAttribute("value", "Search filtering");
  button.setAttribute("onclick", "inject_html()");

  var node = document.getElementsByTagName("form")[0];
  if (node) {
    node.parentNode.appendChild(button);
  }
  else if (document.body) {
    document.body.appendChild(button);
  }
}




//*********************************************************

}
