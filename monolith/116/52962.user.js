// ==UserScript==
// @name           govno
// @version	   2
// @description    govno userscript
// @include        http://2-ch.ru/*
// @include        http://*.2-ch.ru/*
// @exclude        */src/*
// ==/UserScript==

var nullcheck = ([ //kusaba-liek boards
	'0chan.ru',
	'gchan.ru',
	'gaychan.ru',
	'apple.su',
	'02-ch.ru',
	'410chan.ru'
		].indexOf(location.host.replace('www.','')) == -1),
dobrocheck    = ([ //boards without <div id="thread...">
	'2-ch.ru',
	'nowere.net',
	'img.4chan.org',
	'zip.4chan.org',
	'orz.4chan.org',
	'cgi.4chan.org'
		].indexOf(location.host.replace('www.','')) == -1),
scripts = [ //dobroscripts base64 collection. //WARNING order important!
	//0chan.js
	'data:text/javascript;base64,',
	//0dobrofix.js
	'data:text/javascript;base64,Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgRG9icm9maXgKLy8gQHZlcnNpb24JICAwLjctcmMxCi8vIEBkZXNjcmlwdGlvbiAgIEZpeCBmb3IgZG9icm9jaGFuLnJ1IGFuZCBzb21lIG90aGVyIGJvYXJkcyB0byBtYWtlIHRoZW0gd29yayB3aXRoIDJjaDpwcm9maXQhCi8vIEBlbmNvZGluZyAgICAgIHV0Zi04Ci8vIEBleGNsdWRlICAgICAgICovc3JjLyoKLy8gQGluY2x1ZGUgICAgICAgaHR0cDovLzItY2gucnUvKgovLyBAaW5jbHVkZSAgICAgICBodHRwOi8vKi4yLWNoLnJ1LyoKLy8gQGluY2x1ZGUgICAgICAgaHR0cDovL25vd2VyZS5uZXQvKgovLyBAaW5jbHVkZSAgICAgICBodHRwOi8vKi5ub3dlcmUubmV0LyoKLy8gQGluY2x1ZGUgICAgICAgaHR0cDovLyouNGNoYW4ub3JnLyoKLy8gPT0vVXNlclNjcmlwdD09CgovLyBCUkVBSyBOT1QgSU4gQk9BUkQKaWYobG9jYXRpb24ucGF0aG5hbWUgIT0gJy8nICYmIGxvY2F0aW9uLnBhdGhuYW1lLnNlYXJjaCgvXlwvW14vXStodG1sLykgPT0gLTEpCmlmKHNlbGYgPT0gd2luZG93LnRvcCB8fCAod2luZG93LnRvcC5mcmFtZXMgJiYgc2VsZiA9PSB3aW5kb3cudG9wLmZyYW1lc1sxXSAmJiB3aW5kb3cubmFtZS5pbmRleE9mKCdyZXBseXRndCcpID09IC0xKSkKKGZ1bmN0aW9uKCl7IC8vQkVHSU4gRG9icm9maXggbmFtZXNwYWNlCgp2YXIgZG9icm9maXggPSBmdW5jdGlvbigpIHsKCglpZighKGRlbGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVsZm9ybScpIHx8IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCdkZWxmb3JtJylbMF0pKSByZXR1cm47CgkKCXZhciBsYXN0bm9kZSA9IGRlbGZvcm0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ1RBQkxFJyk7CglsYXN0bm9kZSA9IGxhc3Rub2RlW2xhc3Rub2RlLmxlbmd0aCAtIDFdOwoKCXZhciB0bnVtID0gJzAnOwoJdmFyIHRkaXYgPSBuZXcgQXJyYXkoKTsKCQkKLy8gCTxESVYgaWQ9InRocmVhZC00MjQwNSIgPjwvRElWPgoJdGRpdlt0bnVtXSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoJd2l0aCAodGRpdlt0bnVtXSkKCQlpZCA9IHRudW07CgoJd2l0aCAoZGVsZm9ybSkgaW5zZXJ0QmVmb3JlKHRkaXZbdG51bV0sIGZpcnN0Q2hpbGQpOwoJCgkvL2luc2VydCBtaXNzaW5nIHRocmVhZCBkaXZzCglmb3IgKHZhciBub2RlcyA9IGRlbGZvcm0uY2hpbGROb2Rlcywgbm9kZSwgaSA9IDA7IG5vZGUgPSBub2Rlc1tpXTsgaSsrKSB7CgkJdmFyIG5leHRub2RlID0gbm9kZS5uZXh0RWxlbWVudFNpYmxpbmc7CgkKCQlpZiAobm9kZS50YWdOYW1lID09ICdMQUJFTCcpIHsKCQkJdGRpdlt0bnVtXS5pZCA9ICd0aHJlYWQtJyArIG5vZGUuZmlyc3RDaGlsZC52YWx1ZTsKCQkJY29udGludWU7CgkJfQoJCWlmIChub2RlLnRhZ05hbWUgPT0gJ0lOUFVUJykgey8vIDRjaGFuLm9yZwoJCQl0ZGl2W3RudW1dLmlkID0gJ3RocmVhZC0nICsgbm9kZS5uYW1lOwoJCQljb250aW51ZTsKCQl9CgoJCWlmKChub2RlLnRhZ05hbWUgPT0gJ0JSJykgJiYgKG5leHRub2RlLnRhZ05hbWUgPT0gJ0hSJykgJiYgKG5leHRub2RlLm5leHRFbGVtZW50U2libGluZy5uZXh0RWxlbWVudFNpYmxpbmcgIT0gbGFzdG5vZGUpKSB7CgkJCXRudW0rKzsKCQkJdGRpdlt0bnVtXSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwoJCQl3aXRoICh0ZGl2W3RudW1dKQoJCQkJaWQgPSB0bnVtOwoJCQlkZWxmb3JtLmluc2VydEJlZm9yZSh0ZGl2W3RudW1dLCBuZXh0bm9kZS5uZXh0RWxlbWVudFNpYmxpbmcpOwoJCX0KCX0KCgl0bnVtID0gMDsKCgl2YXIgbm9kZWxpc3QgPSBuZXcgQXJyYXkoKTsKCgkvL2ZpbmQgbm9kZXMgd2hpY2ggc2hvdWxkIGJlIGluIHRocmVhZCBkaXYKCWZvciAodmFyIG5vZGVzID0gZGVsZm9ybS5jaGlsZE5vZGVzLCBub2RlLCBpID0gMDsgbm9kZSA9IG5vZGVzW2ldOyBpKyspIHsKCQkvL2VzY2FwZSB0aHJlYWQgc2VwYXJhdG9ycwoJCWlmKChub2RlLnRhZ05hbWUgPT0gJ0JSJykgJiYgKG5vZGUubmV4dEVsZW1lbnRTaWJsaW5nLnRhZ05hbWUgPT0gJ0hSJykpCgkJCWNvbnRpbnVlOwoJCWlmKChub2RlLnRhZ05hbWUgPT0gJ0hSJykgJiYgKG5vZGUucHJldmlvdXNFbGVtZW50U2libGluZy50YWdOYW1lID09ICdCUicpKQoJCQljb250aW51ZTsKCQkKCQkvL3JlYWNoZWQgbmV4dCB0aHJlYWQncyBkaXYKCQlpZihub2RlID09IHRkaXZbdG51bV0pIHsKCQkJLy9zZXQgbmV4dCB0cmVhZCBkaXYKCQkJdG51bSsrOwoJCQkKCQkJbm9kZWxpc3QucHVzaChub2RlKTsKCQkJCgkJCWNvbnRpbnVlOwoJCX0KCQkKCQkvL2VzY2FwZSBsYXN0IG5vZGVzCgkJaWYobm9kZSA9PSBsYXN0bm9kZSkKCQkJYnJlYWs7IC8vZG8gbm90IHdhbnQKCgkJLy9vdGhlcnMgZ28gdG8gY3VycmVudCBkaXYKCQlub2RlbGlzdC5wdXNoKG5vZGUpOwoJfQoKCS8vd3RmPyBpIGRvbnQga25vdwoJdG51bSA9IC0xOwoKCWZvciAodmFyIG5vZGUsIGkgPSAwOyBub2RlID0gbm9kZWxpc3RbaV07IGkrKykgewoJCS8vd2hpbGUgbm90IHRocmVhZCBkaXYuLi4KCQlpZihub2RlICE9IHRkaXZbdG51bSArIDFdKSB7CgkJCS8vLi4ubW92ZSBjb2xsZWN0ZWQgbm9kZXMgdG8gY3VycmVudCB0aHJlYWQgZGl2Li4uCgkJCXRkaXZbdG51bV0uYXBwZW5kQ2hpbGQobm9kZSk7CgkJCWNvbnRpbnVlOwoJCX0KCQkvLy4uLmhlcmUgaXQgaXMKCQlpZihub2RlID09IHRkaXZbdG51bSArIDFdKQoJCQl0bnVtKys7IC8vc3dpdGNoIHRvIG5leHQgdGhyZWFkIGRpdgoJfQp9CgovLyB3YXRjaCBsb2FkIGV2ZW50CmlmKHdpbmRvdy5vcGVyYSB8fCB3aW5kb3cuZHNfZW1iZWQpCglkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKCkgewoJCWlmKCFkb2N1bWVudC5ldmFsdWF0ZSgiLy9kaXZbc3RhcnRzLXdpdGgoQGlkLCd0aHJlYWQtJyldIiwgZG9jdW1lbnQsIG51bGwsIDgsIG51bGwpLnNpbmdsZU5vZGVWYWx1ZSkKCQkJZG9icm9maXgoKTsKCX0sIGZhbHNlKTsKZWxzZSBpZighZG9jdW1lbnQuZXZhbHVhdGUoIi8vZGl2W3N0YXJ0cy13aXRoKEBpZCwndGhyZWFkJyldIiwgZG9jdW1lbnQsIG51bGwsIDgsIG51bGwpLnNpbmdsZU5vZGVWYWx1ZSkKCQlkb2Jyb2ZpeCgpOwoKfSkoKTsgLy9FTkQgRG9icm9maXggbmFtZXNwYWNl',
	//2ch-profit.js
	'data:text/javascript;base64,',
	//base64.js
	'data:text/javascript;base64,Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIEJhc2U2NCBlbmNvZGUvZGVjb2RlCi8vIEBpbmNsdWRlICAgICAgICAqCi8vID09L1VzZXJTY3JpcHQ9PQoKLyoqCioKKiAgQmFzZTY0IGVuY29kZSAvIGRlY29kZQoqICBodHRwOi8vd3d3LndlYnRvb2xraXQuaW5mby8KKgoqKi8KIAp2YXIgQmFzZTY0ID0gewogCgkvLyBwcml2YXRlIHByb3BlcnR5Cglfa2V5U3RyIDogIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89IiwKIAoJLy8gcHVibGljIG1ldGhvZCBmb3IgZW5jb2RpbmcKCWVuY29kZSA6IGZ1bmN0aW9uIChpbnB1dCkgewoJCXZhciBvdXRwdXQgPSAiIjsKCQl2YXIgY2hyMSwgY2hyMiwgY2hyMywgZW5jMSwgZW5jMiwgZW5jMywgZW5jNDsKCQl2YXIgaSA9IDA7CiAKCQlpbnB1dCA9IEJhc2U2NC5fdXRmOF9lbmNvZGUoaW5wdXQpOwogCgkJd2hpbGUgKGkgPCBpbnB1dC5sZW5ndGgpIHsKIAoJCQljaHIxID0gaW5wdXQuY2hhckNvZGVBdChpKyspOwoJCQljaHIyID0gaW5wdXQuY2hhckNvZGVBdChpKyspOwoJCQljaHIzID0gaW5wdXQuY2hhckNvZGVBdChpKyspOwogCgkJCWVuYzEgPSBjaHIxID4+IDI7CgkJCWVuYzIgPSAoKGNocjEgJiAzKSA8PCA0KSB8IChjaHIyID4+IDQpOwoJCQllbmMzID0gKChjaHIyICYgMTUpIDw8IDIpIHwgKGNocjMgPj4gNik7CgkJCWVuYzQgPSBjaHIzICYgNjM7CiAKCQkJaWYgKGlzTmFOKGNocjIpKSB7CgkJCQllbmMzID0gZW5jNCA9IDY0OwoJCQl9IGVsc2UgaWYgKGlzTmFOKGNocjMpKSB7CgkJCQllbmM0ID0gNjQ7CgkJCX0KIAoJCQlvdXRwdXQgPSBvdXRwdXQgKwoJCQl0aGlzLl9rZXlTdHIuY2hhckF0KGVuYzEpICsgdGhpcy5fa2V5U3RyLmNoYXJBdChlbmMyKSArCgkJCXRoaXMuX2tleVN0ci5jaGFyQXQoZW5jMykgKyB0aGlzLl9rZXlTdHIuY2hhckF0KGVuYzQpOwogCgkJfQogCgkJcmV0dXJuIG91dHB1dDsKCX0sCiAKCS8vIHB1YmxpYyBtZXRob2QgZm9yIGRlY29kaW5nCglkZWNvZGUgOiBmdW5jdGlvbiAoaW5wdXQpIHsKCQl2YXIgb3V0cHV0ID0gIiI7CgkJdmFyIGNocjEsIGNocjIsIGNocjM7CgkJdmFyIGVuYzEsIGVuYzIsIGVuYzMsIGVuYzQ7CgkJdmFyIGkgPSAwOwogCgkJaW5wdXQgPSBpbnB1dC5yZXBsYWNlKC9bXkEtWmEtejAtOVwrXC9cPV0vZywgIiIpOwogCgkJd2hpbGUgKGkgPCBpbnB1dC5sZW5ndGgpIHsKIAoJCQllbmMxID0gdGhpcy5fa2V5U3RyLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpOwoJCQllbmMyID0gdGhpcy5fa2V5U3RyLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpOwoJCQllbmMzID0gdGhpcy5fa2V5U3RyLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpOwoJCQllbmM0ID0gdGhpcy5fa2V5U3RyLmluZGV4T2YoaW5wdXQuY2hhckF0KGkrKykpOwogCgkJCWNocjEgPSAoZW5jMSA8PCAyKSB8IChlbmMyID4+IDQpOwoJCQljaHIyID0gKChlbmMyICYgMTUpIDw8IDQpIHwgKGVuYzMgPj4gMik7CgkJCWNocjMgPSAoKGVuYzMgJiAzKSA8PCA2KSB8IGVuYzQ7CiAKCQkJb3V0cHV0ID0gb3V0cHV0ICsgU3RyaW5nLmZyb21DaGFyQ29kZShjaHIxKTsKIAoJCQlpZiAoZW5jMyAhPSA2NCkgewoJCQkJb3V0cHV0ID0gb3V0cHV0ICsgU3RyaW5nLmZyb21DaGFyQ29kZShjaHIyKTsKCQkJfQoJCQlpZiAoZW5jNCAhPSA2NCkgewoJCQkJb3V0cHV0ID0gb3V0cHV0ICsgU3RyaW5nLmZyb21DaGFyQ29kZShjaHIzKTsKCQkJfQogCgkJfQogCgkJb3V0cHV0ID0gQmFzZTY0Ll91dGY4X2RlY29kZShvdXRwdXQpOwogCgkJcmV0dXJuIG91dHB1dDsKIAoJfSwKIAoJLy8gcHJpdmF0ZSBtZXRob2QgZm9yIFVURi04IGVuY29kaW5nCglfdXRmOF9lbmNvZGUgOiBmdW5jdGlvbiAoc3RyaW5nKSB7CgkJc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UoL1xyXG4vZywiXG4iKTsKCQl2YXIgdXRmdGV4dCA9ICIiOwogCgkJZm9yICh2YXIgbiA9IDA7IG4gPCBzdHJpbmcubGVuZ3RoOyBuKyspIHsKIAoJCQl2YXIgYyA9IHN0cmluZy5jaGFyQ29kZUF0KG4pOwogCgkJCWlmIChjIDwgMTI4KSB7CgkJCQl1dGZ0ZXh0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYyk7CgkJCX0KCQkJZWxzZSBpZigoYyA+IDEyNykgJiYgKGMgPCAyMDQ4KSkgewoJCQkJdXRmdGV4dCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKChjID4+IDYpIHwgMTkyKTsKCQkJCXV0ZnRleHQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSgoYyAmIDYzKSB8IDEyOCk7CgkJCX0KCQkJZWxzZSB7CgkJCQl1dGZ0ZXh0ICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoKGMgPj4gMTIpIHwgMjI0KTsKCQkJCXV0ZnRleHQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSgoKGMgPj4gNikgJiA2MykgfCAxMjgpOwoJCQkJdXRmdGV4dCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKChjICYgNjMpIHwgMTI4KTsKCQkJfQogCgkJfQogCgkJcmV0dXJuIHV0ZnRleHQ7Cgl9LAogCgkvLyBwcml2YXRlIG1ldGhvZCBmb3IgVVRGLTggZGVjb2RpbmcKCV91dGY4X2RlY29kZSA6IGZ1bmN0aW9uICh1dGZ0ZXh0KSB7CgkJdmFyIHN0cmluZyA9ICIiOwoJCXZhciBpID0gMDsKCQl2YXIgYyA9IGMxID0gYzIgPSAwOwogCgkJd2hpbGUgKCBpIDwgdXRmdGV4dC5sZW5ndGggKSB7CiAKCQkJYyA9IHV0ZnRleHQuY2hhckNvZGVBdChpKTsKIAoJCQlpZiAoYyA8IDEyOCkgewoJCQkJc3RyaW5nICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYyk7CgkJCQlpKys7CgkJCX0KCQkJZWxzZSBpZigoYyA+IDE5MSkgJiYgKGMgPCAyMjQpKSB7CgkJCQljMiA9IHV0ZnRleHQuY2hhckNvZGVBdChpKzEpOwoJCQkJc3RyaW5nICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoKChjICYgMzEpIDw8IDYpIHwgKGMyICYgNjMpKTsKCQkJCWkgKz0gMjsKCQkJfQoJCQllbHNlIHsKCQkJCWMyID0gdXRmdGV4dC5jaGFyQ29kZUF0KGkrMSk7CgkJCQljMyA9IHV0ZnRleHQuY2hhckNvZGVBdChpKzIpOwoJCQkJc3RyaW5nICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoKChjICYgMTUpIDw8IDEyKSB8ICgoYzIgJiA2MykgPDwgNikgfCAoYzMgJiA2MykpOwoJCQkJaSArPSAzOwoJCQl9CiAKCQl9CiAKCQlyZXR1cm4gc3RyaW5nOwoJfQogCn0=',
	//ch-alib.js
	'data:text/javascript;base64,',
	//ch-fixlinks.js
	'data:text/javascript;base64,Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIENoYW5IaWRlIGZpeExpbmtzIG1vZHVsZQovLyBAdmVyc2lvbgkgICAwLjctcmMxCi8vIEBkZXNjcmlwdGlvbiAgICBjaGFuZ2UgaW1hZ2Vib2FyZCdzIGxpbmtzIGJlaGF2aW9yCi8vIEBlbmNvZGluZyAgICAgICB1dGYtOAovLyBAZXhjbHVkZSAgICAgICAgKi9zcmMvKgovLyA9PS9Vc2VyU2NyaXB0PT0KCnZhciBmaXhMaW5rczsgLy9OT1RFIGRvY3VtZW50IG5hbWVzcGFjZQoKLy9CRUdJTiBTQ1JJUFQgTkFNRVNQQUNFCmlmKHR5cGVvZiBjaGFuRmlsdGVyID09ICJmdW5jdGlvbiIpIChmdW5jdGlvbigpewoKaWYodHlwZW9mIGFkZEdsb2JhbFN0eWxlID09ICJmdW5jdGlvbiIpIHsgLy8gQWRkIGJ1dHRvbiBzdHlsZQoJYWRkR2xvYmFsU3R5bGUoJy5yZXBseSB7IHdvcmQtd3JhcDogYnJlYWstd29yZDsgfScpOwp9Cgp2YXIgU2Nyb2xsVG9FbGVtZW50ID0gZnVuY3Rpb24obm9kZSkgewoJdmFyIHNlbGVjdGVkUG9zWSA9IDA7CgoJaWYobm9kZS50YWdOYW1lID09ICdURCcpCgkJdmFyIG9mZnNldCA9IHdpbmRvdy5pbm5lckhlaWdodCAvIDIgLSBub2RlLmNsaWVudEhlaWdodDsKCWVsc2UKCQl2YXIgb2Zmc2V0ID0gd2luZG93LmlubmVySGVpZ2h0IC8gMjsKCQoJd2hpbGUobm9kZSAhPSBudWxsKQoJewoJCXNlbGVjdGVkUG9zWSArPSBub2RlLm9mZnNldFRvcDsKCQlub2RlID0gbm9kZS5vZmZzZXRQYXJlbnQ7Cgl9CgkKCXdpbmRvdy5zY3JvbGxUbygwLHNlbGVjdGVkUG9zWSAtIG9mZnNldCk7Cn0KCi8vcmVwbGFjZSBmb3IgaGlnaGxpZ2h0IGZ1bmN0aW9uCnZhciBoaWdobGlnaHQyID0gZnVuY3Rpb24ocG9zdCxueWEpIHsKCWlmKHJlcGx5ID0gJHgoIi4vL3RkW0BpZD0ncmVwbHkiICsgcG9zdCArICInIG9yIEBpZD0nIiArIHBvc3QgKyAiJ10iLGRlbGZvcm0pKSB7CgkJdW5oaWdobGlnaHQoKTsKCQlyZXBseS5jbGFzc05hbWUgPSBsb2NhdGlvbi5ob3N0LmluZGV4T2YoJzRjaGFuLm9yZycpID09IC0xID8gJ2hpZ2hsaWdodCcgOiAncmVwbHlobCc7Ci8vIAkJaWYoIXdpbmRvdy5vcGVyYSkgcmVwbHkuc3R5bGUuY3NzVGV4dCA9ICctbW96LWJvcmRlci1yYWRpdXM6IDVweCc7CgkJaWYodHlwZW9mIG9wZXJhUm91bmRDb3JuZXJzID09ICJmdW5jdGlvbiIpIC8vV0FSTklORyBleHByZWltZW50YWwgb3BlcmEgcm91bmQgY29ybmVycwoJCQlvcGVyYVJvdW5kQ29ybmVycyhyZXBseSwgZmFsc2UsIGhsZmlsbCwgaGxzdHJjb2wsIGhsc3Ryd2R0aCwgaGxjb3JuZXIsIGhsZGFzaCk7CgkJaWYobnlhKSBTY3JvbGxUb0VsZW1lbnQocmVwbHkpOwoJCXJldHVybiB0cnVlOwoJfSBlbHNlIGlmKHJlcGx5ID0gJHgoIi4vZGl2W3N0YXJ0cy13aXRoKEBpZCwndGhyZWFkJykgYW5kIGNvbnRhaW5zKEBpZCwnIiArIHBvc3QgKyAiJyldIixkZWxmb3JtKSkgewoJCXVuaGlnaGxpZ2h0KCk7CgkJaWYobnlhKSBTY3JvbGxUb0VsZW1lbnQocmVwbHksZmFsc2UpOwoJCXJldHVybiB0cnVlOwoJfSBlbHNlCgkJcmV0dXJuIGZhbHNlOwp9LCB1bmhpZ2hsaWdodCA9IGZ1bmN0aW9uKCkgewoJaWYoY2VsbCA9ICR4KCIuLy90ZFtAY2xhc3M9JyIgKyAoIGxvY2F0aW9uLmhvc3QuaW5kZXhPZignNGNoYW4ub3JnJykgPT0gLTEgPyAnaGlnaGxpZ2h0JyA6ICdyZXBseWhsJyApICsgIiddIixkZWxmb3JtKSkgewoJCWNlbGwuY2xhc3NOYW1lID0gInJlcGx5IjsKCQlpZih0eXBlb2Ygb3BlcmFSb3VuZENvcm5lcnMgPT0gImZ1bmN0aW9uIikgLy9XQVJOSU5HIGV4cHJlaW1lbnRhbCBvcGVyYSByb3VuZCBjb3JuZXJzCgkJCW9wZXJhUm91bmRDb3JuZXJzKGNlbGwpOwoJfQp9CgppZih3aW5kb3cub3BlcmEgJibCoCF3aW5kb3cuZHNfZW1iZWQpIHsgLy9mb3JiaWQgYm9hcmQncyBuYXRpdmUgaGlnaGxpZ2h0IGZ1bmN0aW9uCgl3aW5kb3cub3BlcmEuZGVmaW5lTWFnaWNGdW5jdGlvbignaGlnaGxpZ2h0JyxmdW5jdGlvbigpe3JldHVybn0pOwp9Cgp2YXIgY2xpY2tMaW5rID0gZnVuY3Rpb24oZSkgewoJZS5wcmV2ZW50RGVmYXVsdCgpOwoJaGlnaGxpZ2h0Mih0aGlzLmhyZWYubWF0Y2goL1xkKyQvKSwgdGhpcy50ZXh0Q29udGVudC5pbmRleE9mKCc+PicpID09IDAgP8KgdHJ1ZSA6IGZhbHNlKTsKfQoKZml4TGlua3MgPSBmdW5jdGlvbihlbHQpIHsKCS8vZm9yYmlkIGJvYXJkJ3MgbmF0aXZlIGhpZ2hsaWdodCBmdW5jdGlvbgoJd2luZG93LmhpZ2hsaWdodCA9IGZ1bmN0aW9uKCl7cmV0dXJuO307CgoJaWYoZWx0IGluc3RhbmNlb2YgRXZlbnQpIGVsdCA9IG51bGw7CgkKCS8vZGVmaW5lZCBpbiBjaGFuZmlsdGVyLWFsaWIuanMKLy8gCXZhciBkZWxmb3JtID0gCgkKCWlmKCEocG9zdGZvcm0gPSAkeCgiLy90ZXh0YXJlYSIpKSkgcmV0dXJuOwoKCS8vQ2hhbmdlIGxpbmtzIGJlaGF2aW9yIGluIHRocmVhZHMKCWlmKGRvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lLmluZGV4T2YoJy9yZXMvJykgIT0gLTEpIHsKCQlpZighZWx0ICYmwqBkb2N1bWVudC5sb2NhdGlvbi5zZWFyY2guaW5kZXhPZignP2knKSAhPSAtMSkgewoJCQl3aXRoKHBvc3Rmb3JtKQoJCQkJdmFsdWUgPSB2YWx1ZS5zdWJzdHIoMCwgc2VsZWN0aW9uU3RhcnQpICsgJz4+JyArIGRvY3VtZW50LmxvY2F0aW9uLnNlYXJjaC5tYXRjaCgvXGQrJC8pICsgJ1xuJyArIHZhbHVlLnN1YnN0cihzZWxlY3Rpb25TdGFydCk7CgkJfSBlbHNlIGlmKGRvY3VtZW50LmxvY2F0aW9uLnNlYXJjaC5pbmRleE9mKCc/JykgIT0gLTEgJiYgZG9jdW1lbnQubG9jYXRpb24uc2VhcmNoLmluZGV4T2YoJz9pJykgPT0gLTEpCgkJCWhpZ2hsaWdodDIoZG9jdW1lbnQubG9jYXRpb24uc2VhcmNoLm1hdGNoKC9cZCskLyksdHJ1ZSk7CgoJCWlmKG5vZGVzID0gJFgoIi4vL2FbY29udGFpbnMoQGhyZWYsICcjJykgb3Igc3RhcnRzLXdpdGgodGV4dCgpLCc+PicpXSIsIChlbHQgfHwgZGVsZm9ybSkpKQoJCWZvcih2YXIgbm9kZSwgaSA9IDA7IG5vZGUgPSBub2Rlcy5zbmFwc2hvdEl0ZW0oaSk7IGkrKykgewoJCQl2YXIgdXJsID0gbm9kZS5ocmVmOwoJCQlpZihub2RlLnRleHRDb250ZW50LmluZGV4T2YoJz4+JykgPT0gMCkKCQkJCXdpdGgobm9kZSkKCQkJCQlocmVmID0gdXJsLnJlcGxhY2UoLyNpPyhcZCspLywiPyQxIiksCgkJCQkJYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbGlja0xpbmssIGZhbHNlKTsKCQkJZWxzZSBpZihbJ0JMT0NLUVVPVEUnLCdQJywnRElWJ10uaW5kZXhPZihub2RlLnBhcmVudE5vZGUudGFnTmFtZSkgPT0gLTEpCgkJCQl3aXRoKG5vZGUpCgkJCQkJaHJlZiA9IHVybC5yZXBsYWNlKC8jKGk/KShcZCspLywiPyQxJDIiKSwKCQkJCQlhZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsaWNrTGluaywgZmFsc2UpOwoJCX0KCX0gZWxzZSB7Ly9DaGFuZ2UgbGlua3MgYmVoYXZpb3IgaW4gYm9hcmRzCgkJaWYobm9kZXMgPSAkWCgiLi8vYVtjb250YWlucyhAaHJlZiwgJyMnKSBvciBzdGFydHMtd2l0aChAaHJlZiwgJ2phdmFzY3JpcHQ6aW5zZXJ0Jykgb3Igc3RhcnRzLXdpdGgoQGhyZWYsICdqYXZhc2NyaXB0OnF1b3RlJyldIiwgKGVsdCB8fCBkZWxmb3JtKSkpCgkJZm9yKHZhciBub2RlLCBpID0gMDsgbm9kZSA9IG5vZGVzLnNuYXBzaG90SXRlbShpKTsgaSsrKSB7CgkJCXZhciB1cmwgPSBub2RlLmhyZWY7CgkJCWlmKG5vZGUudGV4dENvbnRlbnQuaW5kZXhPZignPj4nKSA9PSAwKQoJCQkJd2l0aChub2RlKQoJCQkJCS8vRklYTUUgaHJlZiA9IHVybC5yZXBsYWNlKC9cL1teL10rKFwueD9odG1sKSNpPyhcZCspLywgIi8iICsgJHgoImFuY2VzdG9yOjpkaXZbY29udGFpbnMoQGlkLCd0aHJlYWQnKV0iLG5vZGUpLmlkLm1hdGNoKC9cZCsvKSArICIkMT8kMiIpLAoJCQkJCWhyZWYgPSB1cmwucmVwbGFjZSgvI2k/KFxkKykvLCI/JDEiKSwKCQkJCQlhZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsaWNrTGluaywgZmFsc2UpOwoJCQllbHNlIGlmKFsnQkxPQ0tRVU9URScsJ1AnLCdESVYnXS5pbmRleE9mKG5vZGUucGFyZW50Tm9kZS50YWdOYW1lKSA9PSAtMSkgewoJCQkJaWYodXJsLmluZGV4T2YoJ2h0bWwnKSA9PSAtMSAmJiAodGhyZWFkID0gJHgoIi4vYW5jZXN0b3I6OmRpdltjb250YWlucyhAaWQsICd0aHJlYWQnKV0vL3NwYW5bQGNsYXNzPSdyZWZsaW5rJyBvciBzdGFydHMtd2l0aChAaWQsJ25vdGhyZWFkJyldLy9hIixub2RlKSkpIHsKCQkJCQl0aHJlYWQgPSB0aHJlYWQuaHJlZiArICcnOyAvL0ZJWE1FCgkJCQkJdXJsID0gdGhyZWFkLnN1YnN0cmluZygwLHRocmVhZC5sYXN0SW5kZXhPZignbCcpKSArICcjJyArIHVybC5zdWJzdHIodXJsLmxhc3RJbmRleE9mKCcvJykgIT0gLTEgPyB1cmwubGFzdEluZGV4T2YoJy8nKSA6IDApLm1hdGNoKC9cZCsvKTsKCQkJCX0KCQkJCXdpdGgobm9kZSkKCQkJCQlocmVmID0gdXJsLnJlcGxhY2UoLyMoW2lxXT8pKFxkKykvLCI/aSQyIiksCgkJCQkJYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbGlja0xpbmssIGZhbHNlKTsKCQkJfQoJCX0KCX0KfQoKLy8gd2F0Y2gKZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZmlsdGVyJywgZml4TGlua3MsIHRydWUpOwoKfSkoKTsKLy9FTkQgU0NSSVBUIE5BTUVTUEFDRQ==',
	//ch-flash.js
	'data:text/javascript;base64,Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIENoYW5IaWRlIEZsYXNoIGhpZGluZyBtb2R1bGUKLy8gQHZlcnNpb24JICAgMC43LXJjMQovLyBAZGVzY3JpcHRpb24gICAgSW1hZ2VzIGZpbHRlciBtb2R1bGUKLy8gQGVuY29kaW5nICAgICAgIHV0Zi04Ci8vIEBleGNsdWRlICAgICAgICAqL3NyYy8qCi8vIEBleGNsdWRlICAgICAgICBodHRwOi8vaWljaGFuLnJ1LyoKLy8gQGV4Y2x1ZGUgICAgICAgIGh0dHA6Ly9kb2Jyb2NoYW4ucnUvKgovLyBAZXhjbHVkZSAgICAgICAgaHR0cDovLyouZG9icm9jaGFuLnJ1LyoKLy8gQGV4Y2x1ZGUgICAgICAgIGh0dHA6Ly8yLWNoLnJ1LyoKLy8gQGV4Y2x1ZGUgICAgICAgIGh0dHA6Ly8qLjItY2gucnUvKgovLyBAZXhjbHVkZSAgICAgICAgaHR0cDovL25vd2VyZS5uZXQvKgovLyBAZXhjbHVkZSAgICAgICAgaHR0cDovLyoubm93ZXJlLm5ldC8qCi8vIEBleGNsdWRlICAgICAgICBodHRwOi8vKi40Y2hhbi5vcmcvKgovLyA9PS9Vc2VyU2NyaXB0PT0KCnZhciBmbGFzaEhpZGVzOyAvL05PVEUgZG9jdW1lbnQgbmFtZXNwYWNlCgovL0JFR0lOIFNDUklQVCBOQU1FU1BBQ0UKaWYodHlwZW9mIGNoYW5GaWx0ZXIgPT0gImZ1bmN0aW9uIikgKGZ1bmN0aW9uKCl7CgppZih0eXBlb2YgYWRkR2xvYmFsU3R5bGUgPT0gImZ1bmN0aW9uIikgey8vIEFkZCBidXR0b24gc3R5bGUKCWFkZEdsb2JhbFN0eWxlKAoJCScuaGlkZWZsYXNoIHsgZm9udC1zaXplOiAwLjZlbTsgbWFyZ2luOiAwIDRweCAwIDRweDsgcGFkZGluZzogNHB4IDAgNHB4IDE2cHg7IGNvbG9yOiAjZjMzOyBjdXJzb3I6cG9pbnRlcjsgYmFja2dyb3VuZDogdXJsKCcgKwoJCSdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQm1KTFIwUUEvd0QvQVArZ3ZhZVRBQUFBQ1hCSVdYTUFBQXNUQUFBTEV3RUFtcHdZQUFBQUIzUkpUVVVIMUFjWUVBZ3Q4OVlpOUFBQUFxMUpSRUZVZU5xVmtFdElWR0VBaGM5Ly8vL2UrOTg3RDJmdTVPZ29QWWdrYkdyR1V0cVhDeVVLb29LaXFLeEZ1TEFvbFJBS29scTBpS0NGdEdobGdTNkNqTUJhYU11UUxJTFNuaEQyR21QR3FYRm1ybmZ1UE82alJSZ2xzNml6UEJ3K3pqa0VBSWFHUnYyQ3hEbzVsd1lFa1c2aUFwaEFTTmEyN0ltQ1lWd3VtM2gvL1BpZU1xcUlEQTRPKzBWT1QvcTBtbDUvd0tjcENvY2dDSUFMdUk2TmZEYjdLdmM5YzE3UFcyTTlQWWZzNVFCV2Rxd09yOWZYRzZyVk5DM29oeXlMS0Zkc0ZJc2xVQ3BEOVNoUnExeTVZQlRtWndETUxnY0lnSE1xcU5Wb2dZQWZLMElCaExVZ0pNYWdCZjFRVlJrK240ZlVONFEzQStpc05rRUFjZHBVandKWll1Q1NCRVlaR0tOUU9ZZFhWYUJ3am5COUdKWlZhcThHWUpRUlRpbEZvVkRFdC9rZjRKSUlyMGVGSkRLNExvTkFDQnhKUkxsVTlGWnRrTThiQmlFRXJndFFnVUFTR1VSR1FRRElvZ2d1eTREandEUkwyYXFBSCttRktXUFJnTzNZc0d3SERnRGJjVUFwaFNTSzRLS0lUN01mb2V2bVJGWEFYQ0o1OGZYTTJ6bENBRUVnY0YwWDdoK0JWREtGeWNmUHNLaGI2V29BR3FtTHBrdWxRczYycmJiYWNNaXJxaW9ZRlVBSlFTS1J3SU94UjZoVUtOYUU2SXJUc1hlTkIxbzlpZUduK3U4NUJBRGEyN3Q0WFVOTmk2YlY5R3NoVHl1WG1WSXFWdElMR1dPTVVmNDg3TEgyTlpHcHZSdTBMODYzei9NUDV6SkM5NUZieVJUK1ZUZjJSMDY4SERtb0d5L091Ujl2dHJyM3VzUDNydXlLckFFQXBremk5bC9wRHdEU09HbjJJYmRrbVNYY25YNHl2VjRKaEhvYnQzYWcyYnkvSTVkUG1nUGI2OC9TNXE3STZHbHRkM3diajhXMzhWZzhrOWJqS1QxNzNScUhzUVFZZjdkb2JneUtVNm12S2NsZjN4QmJGWTBxWGp2Wi9EbFJpQkhsR3E1V2FYM0o3SU8rM0R5MnBTNjBibTJnZitmaGpqT1NiY2gzUm1kL25mZy9PdHBTRjJ4Y0dSaVJhNXM2UDVtcjMvd0VtQTM2VFZ2dXVmOEFBQUFBU1VWT1JLNUNZSUk9JyArCgkJJykgbm8tcmVwZWF0IGxlZnQgY2VudGVyOyB9JyArCgkJJy5zaG93Zmxhc2ggeyBmb250LXNpemU6IDAuNmVtOyBtYXJnaW4tbGVmdDogNHB4OyBwYWRkaW5nOiA0cHggMCA0cHggMTZweDsgY29sb3I6ICNmMzM7IGN1cnNvcjpwb2ludGVyOyBiYWNrZ3JvdW5kOiB1cmwoJyArCgkJJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQkFBQUFBUUNBWUFBQUFmOC85aEFBQUFCbUpMUjBRQS93RC9BUCtndmFlVEFBQUFDWEJJV1hNQUFBc1RBQUFMRXdFQW1wd1lBQUFBQjNSSlRVVUgxQWNZRUFrNmFSNldjZ0FBQXJkSlJFRlVlTnAxajB0SVZHRVlodC8vL1ArNXpzV1pNODU0SXhYRVJVNUpwUlF0dzB3WEJaRkJVWlRrSWd3c2FoWVJGWlFJdGFwTjBpSUlMTkJGVUJKWWhPWWlTTXNpS094aUMyODV5b3ptYmNZemx6UG4waUtVa05PN2VoZmY5L0M4QkFDNnVwNTVPWUUxU3BKd2hlUHBkc3FCY1lTc21JWTVrTkswRGoyTm55MHRSM1E0aEhSMmRudDVpWjczcUhrUnI4K2p5cklFanVNQUc3QXRFNG1WbGErcnY1ZXVKeE5HWDF2YlNYTXpnT21XMGVCMmV5S0JvS3FxZmk5RWtZZWVNNUhKWkVHcENNVWxodzA5ZDBOTHpZOENtTmdNNEFEcmdsL05VMzArTC9JRFBvUlVQd1RHb1BxOVVCUVJIbytMRkJhSGRnSm9kSnJBZ1ZpMWlrdUdLREJJZ2dCR0dSaWpVQ1FKYmtXR0xFa0lGWVpnR05rNkp3Q2pqRWlVVXFSU0djek5MMElTZUxoZENnU2V3YllaT0VKZ0NUejBiTWJ0YUpCSWFCb2hCTFlOVUk1QTRCbDRSa0VBaUR3UFNSUUJ5MEk2blYxeEJDd3VMSTlvYXhwTXk0UmhXckFBbUpZRlNpa0Vub2ZFODVpYW1FUXltUjV3Qk14R1krM2ZSbi9NRWdKd0hJRnQyN0QvT1lqSDRoaCsreEZyU1dQQkNVQ0xDc0lMMld4cTFUU04ybUFvNEZZVUJZeHlvSVFnR28zaVJkOXI1SElVNVFHYWY3RjZyT1I0alN2YS9TRzVNWWNBUU5tOXltQlRWZms4QUxpSDlrOUpJcE96bWR6QzhwTFd4NmowS2VReWpsYVNrYVlxOVpjMU56My9jbmFKYXozOUtCYmYwSkNIZ2NoZ3ZSMFpyTGVkTk84Zkt6cjdwZWRFVXZ0OHpaNThVR1AzdG9aNmJ4OHFLZ2NBOHIrbnUzVURaTDNmT1Z3VUNKVUdydTVwM0JjcEtmWmc1czF6L2YxSTdPbFlqTDlNOXpaWDNIUUN2SHM4MGI3ZSs4ZlcwdHY4L0VoOEppNTRDNHVyUzhOaDJXM0d0azVIVTlWc2NUeEZBQ0JRb2RnQXNEaWVJaytTUTU3TndJNVhzNnRuZGhtM1ZoUDkrc0ZURFplRTB0MmluamR4Z0FDQS9CQTRWLzUzeXIvcVRtbmVVZUF2MmVMckVZT1ZqVlBwc3U5L0FHbE5CSmVvSVphTkFBQUFBRWxGVGtTdVFtQ0MnICsKCQknKSBuby1yZXBlYXQgbGVmdCBjZW50ZXI7IH0nCgkpOwoKCWlmKHdpbmRvdy5vcGVyYSB8fMKgd2luZG93LmRzX2VtYmVkKSB7CgkJLy9oaWRlIGFsbCBmbGFzaCBiZWZvcmUgZmlsdGVyIGJlaW5nIGFwcGxpZWQKCQlhZGRHbG9iYWxTdHlsZSgnb2JqZWN0IHtkaXNwbGF5Om5vbmU7fScpOwoJfQp9CgovLyBoaWRlcyBmbGFzaAp2YXIgaGlkZUZsYXNoID0gZnVuY3Rpb24oc2hvd2hpZGVmbGFzaCxmbGFzaCkgewoJd2l0aChzaG93aGlkZWZsYXNoKQoJCXRpdGxlCT0gItCf0L7QutCw0LfQsNGC0YwgZmxhc2giLAoJCWNsYXNzTmFtZSA9ICdzaG93Zmxhc2gnLAoJCXRleHRDb250ZW50ID0gIkZsYXNoINGB0LrRgNGL0YIuICI7CgoJZmxhc2guc3R5bGUuZGlzcGxheSA9ICdub25lJzsKCglpZihub2RlID0gJHgoIi4vYW5jZXN0b3I6OnRkfC4vYW5jZXN0b3I6OmRpdiIsZmxhc2gpKSB7CgkJbm9kZS5pbnNlcnRCZWZvcmUoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyksbm9kZS5maXJzdENoaWxkKTsKCQlzZXRUaW1lb3V0KGZ1bmN0aW9uKHgpIHsgeC5yZW1vdmVDaGlsZCh4LmZpcnN0Q2hpbGQpIH0sIDAsIG5vZGUpOwoJfQp9CgovLyBzaG93cyBoaWRkZW4gZmxhc2gKdmFyIHNob3dGbGFzaCA9IGZ1bmN0aW9uKHNob3doaWRlZmxhc2gsZmxhc2gpIHsKCXdpdGgoc2hvd2hpZGVmbGFzaCkKCQl0aXRsZQk9ICLQodC60YDRi9GC0YwgRmxhc2giLAoJCWNsYXNzTmFtZSA9ICdoaWRlZmxhc2gnLAoJCXRleHRDb250ZW50ID0gIiAiOwoKCWZsYXNoLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOwoKCWlmKG5vZGUgPSAkeCgiLi9hbmNlc3Rvcjo6dGR8Li9hbmNlc3Rvcjo6ZGl2IixmbGFzaCkpIHsKCQlub2RlLmluc2VydEJlZm9yZShkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSxub2RlLmZpcnN0Q2hpbGQpOwoJCXNldFRpbWVvdXQoZnVuY3Rpb24oeCkgeyB4LnJlbW92ZUNoaWxkKHguZmlyc3RDaGlsZCkgfSwgMCwgbm9kZSk7Cgl9Cn0KCnZhciB0b2dnRmxhc2ggPSBmdW5jdGlvbigpIHsKCXZvaWQoZmxhc2ggPSAkeCgiLi9mb2xsb3dpbmc6Om9iamVjdFsxXSIsdGhpcykpOwoJaWYodGhpcy5nZXRBdHRyaWJ1dGUoJ2NsYXNzJykgPT0gJ3Nob3dmbGFzaCcpCgkJc2hvd0ZsYXNoKHRoaXMsZmxhc2gpOwoJZWxzZQoJCWhpZGVGbGFzaCh0aGlzLGZsYXNoKTsKfQoKLy8gbWFpbiBmbGFzaCBoaWRlIGZ1bmN0aW9uCmZsYXNoSGlkZXMgPSBmdW5jdGlvbihlbHQpIHsKCglpZihlbHQgaW5zdGFuY2VvZiBFdmVudCkgZWx0ID0gbnVsbDsKCi8vIAl2YXIgZGVsZm9ybSA9IC8v0L7Qv9GA0LXQtNC10LvQtdC90LAg0LIgY2hhbmZpbHRlci1hbGliLmpzCgoJLy9pbnNlcnQgaGlkZWZsYXNoIGJ1dHRvbnMKCWlmKGZsYXNoZXMgPSAkWCgiLi8vb2JqZWN0IiwgKGVsdCB8fCBkZWxmb3JtKSkpCglmb3IodmFyIGZsYXNoLCBjbm9kZSwgaSA9IDA7IGZsYXNoID0gZmxhc2hlcy5zbmFwc2hvdEl0ZW0oaSk7IGkrKykgewoJCXdpdGggKHNob3doaWRlZmxhc2ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJykpCgkJCW5hbWUJPSAnc2hvd2hpZGVmbGFzaCcsCgkJCXRpdGxlCT0gItCf0L7QutCw0LfQsNGC0YwgZmxhc2giLAoJCQljbGFzc05hbWUgPSAnc2hvd2ZsYXNoJywKCQkJdGV4dENvbnRlbnQgPSAiRmxhc2gg0YHQutGA0YvRgi4gIiwKCQkJYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0b2dnRmxhc2gsIGZhbHNlKTsKCgkJY25vZGUgPSAkeF9iYWNrd2FyZCgiLi9wcmVjZWRpbmc6OnNwYW5bQGNsYXNzPSdyZWZsaW5rJ10iLGZsYXNoKTsKCgkJY25vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoc2hvd2hpZGVmbGFzaCxjbm9kZSk7Cgl9Cn0KCi8vIHdhdGNoCmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2ZpbHRlcicsIGZsYXNoSGlkZXMsIHRydWUpOwoKfSkoKTsKLy9FTkQgU0NSSVBUIE5BTUVTUEFDRQ==',
	//ch-images.js
	'data:text/javascript;base64,',
	//ch-opposts.js
	'data:text/javascript;base64,',
	//ch-posts.js
	'data:text/javascript;base64,Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIENoYW5IaWRlIFBvc3RzIGhpZGluZyBtb2R1bGUKLy8gQHZlcnNpb24JICAgMC43LXJjMQovLyBAZGVzY3JpcHRpb24gICAgUG9zdHMgZmlsdGVyIG1vZHVsZQovLyBAZW5jb2RpbmcgICAgICAgdXRmLTgKLy8gQGV4Y2x1ZGUgICAgICAgICovc3JjLyoKLy8gPT0vVXNlclNjcmlwdD09Cgp2YXIgcG9zdEhpZGVzOyAvL05PVEUgZG9jdW1lbnQgbmFtZXNwYWNlCgovL0JFR0lOIFNDUklQVCBOQU1FU1BBQ0UKaWYodHlwZW9mIGNoYW5GaWx0ZXIgPT0gImZ1bmN0aW9uIikgKGZ1bmN0aW9uKCl7CgovLyBBZGQgYnV0dG9uIHN0eWxlCmlmKHR5cGVvZiBhZGRHbG9iYWxTdHlsZSA9PSAiZnVuY3Rpb24iKSB7CglhZGRHbG9iYWxTdHlsZSgKCQknLmhpZGVwb3N0IHsgY29sb3I6ICNmMzM7IHBhZGRpbmctbGVmdDoxNnB4OyBjdXJzb3I6cG9pbnRlcjsgYmFja2dyb3VuZDogdXJsKCcgKwoJCSdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJBQUFBQVFDQVlBQUFBZjgvOWhBQUFBQkdkQlRVRUFBSy9JTndXSzZRQUFBQmwwUlZoMFUyOW1kSGRoY21VQVFXUnZZbVVnU1cxaFoyVlNaV0ZrZVhISlpUd0FBQUYyU1VSQlZIamFZdnovL3o4REpZQ0pnVUpBc1FHTVJrWkd5SHdlSUhZRjRyL1kxQUx4cDdObnorNUhGbVJCY1E0VFU3bWFtbHJOOSsvZkdUZzVPUmtZR1JrWlFHd09EZzZHdDIvZk1yeCsvVG9WcUF5bkFia3VMaTQxN2UzdFlNN1ZxMWNaL3Y3OXk2Q25wd2ZtMTlYVk1XemR1dlVmcmpBSVVGVlY3WldVbEdSNCt2UXBXT0RYcjE4TXQyN2RnaXU4Y09FQzFqQUF1Y0NXbDVkM29ZaUlDT3ZseTVjWlFIam16SmtNaG9hR1lBd0NUVTFOREYrL2ZzVnVBTkN2Ry83OCtjTjM1Y29Wc01DM2I5OFlnb0tDR0RaczJBRG1WMWRYTSt6WXNZT0JqWTBOZXpUdTNyMzdNWWp4K2ZObk1PYmg0V0ZZdW5RcFhFRnJheXVEa3BJUzJFdFlEUUM2d0h2aHdvVjNtSm1ad1FLbHBhVU0zTnpjREYxZFhReXhzYkZnc2RXclYrTk1CNkF3ZUtxc3JCemEwOU96cDdDd1VIakZpaFVNOSsvZloxaTVjaVhjQzdpY0QwNGNTSG5CSHFocEw5Qm1aandKTHdXWWtPYWlpSUFNUU1MaFFQd2RGdzRQRHc5RVU0L2lnb0hKVEFBQkJnRHZsYmlLaHNsc05RQUFBQUJKUlU1RXJrSmdnZz09JyArCgkJJykgbm8tcmVwZWF0IHJpZ2h0IGNlbnRlcjsgfScKCSk7CgoJaWYoKHdpbmRvdy5vcGVyYSB8fMKgd2luZG93LmRzX2VtYmVkKSAmJiAobm9kZXMgPSBjb29raWVzLm1hdGNoKC9wXGQrL2cpKSkgewoJCWZvcih2YXIgbnlhLCBpID0gMCwgdG9oaWRlID0gJyc7IG55YSA9IG5vZGVzW2ldOyBpKyspCgkJCXRvaGlkZSArPSAoaSA+IDAgPyAiLCAiIDogJycpICsgInRyID4gdGRbaWQqPSciICsgbnlhLnNsaWNlKDEsLTIpICsgIiddIjsKCgkJYWRkR2xvYmFsU3R5bGUodG9oaWRlICsgJyB7ZGlzcGxheTpub25lO30nLCAiaGlkZXJlcGx5c3R5bGUiKTsKCX0KfQoKLy8gaGlkZXMgcG9zdAp2YXIgaGlkZXBvc3QgPSBmdW5jdGlvbihueWEsdXNlcikgewoJdmFyIG5vZGUgPSAkeCgiLi8vdGRbY29udGFpbnMoQGlkLCciICsgbnlhICsgIicpXSIsZGVsZm9ybSk7CgoJLy9jcmVhdGUgZWxlbWVudCB3aXRoIHNob3dwb3N0IGJ1dHRvbgoJd2l0aChkdW1teSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJykpCgkJaWQJPSAnaGlkZGVucG9zdC0nICsgbnlhLAoJCXNldEF0dHJpYnV0ZSgnbmFtZScsJ2hpZGRlbnBvc3QnKSwKCQlzZXRBdHRyaWJ1dGUoJ3ZhbGlnbicsJ3RvcCcpLAoJCWNsYXNzTmFtZSA9ICdyZXBseScsCgkJaW5uZXJIVE1MID0gJzxpPtCf0L7RgdGCIOKElicgKyBueWEgKyAnINGB0LrRgNGL0YIuPC9pPiBbPGEgaHJlZj0iIyI+0J/QvtC60LDQt9Cw0YLRjDwvYT5dJywKCQlnZXRFbGVtZW50c0J5VGFnTmFtZSgnYScpWzBdLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSl7IGUucHJldmVudERlZmF1bHQoKTsgc2hvd3Bvc3QodGhpcy5wYXJlbnROb2RlLmlkLm1hdGNoKC9cZCsvKSk7IH0sIGZhbHNlKTsKCglub2RlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQoZHVtbXkpOwoKCWlmKHVzZXIgJiYgdHlwZW9mIHJlc2l6ZURvd24gPT0gImZ1bmN0aW9uIikgey8vV0FSTklORyBzdmlzdG9wZXJkZWxraQoJCXZhciBvd2QgPSBkdW1teS5jbGllbnRXaWR0aDsKCQl2YXIgb2h0ID0gZHVtbXkuZmlyc3RDaGlsZC5jbGllbnRIZWlnaHQ7CgoJCS8va25vdyB0YXJnZXQgc2l6ZQoJCXdpdGgoZHVtbXkuc3R5bGUpCgkJCWRpc3BsYXkgPSAnbm9uZScsCgkJCXdpZHRoID0gbm9kZS5jbGllbnRXaWR0aCArICdweCcsCgkJCWhlaWdodCA9IG5vZGUuY2xpZW50SGVpZ2h0ICsgJ3B4JywKCQkJZGlzcGxheSA9ICd0YWJsZS1jZWxsJzsKCQkKCQlub2RlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CgkJCgkJcmVzaXplRG93bihkdW1teSwgZmFsc2UsIG93ZCwgb2h0LCBmdW5jdGlvbihvYmopewoJCQkJd2l0aChvYmouc3R5bGUpCgkJCQkJd2lkdGggPSAnYXV0bycsCgkJCQkJaGVpZ2h0ID0gJ2F1dG8nLAoJCQkJCWRpc3BsYXkgPSAndGFibGUtY2VsbCc7CgkJCX0pOwoJfSBlbHNlCgkJbm9kZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwoKCXZhciBub3cgPSBuZXcgRGF0ZSgpOwoJbm93ID0gbm93LmdldFRpbWUoKS50b1N0cmluZygpLnN1YnN0cigzLDIpOwoJbnlhID0gbnlhLnRvU3RyaW5nKCkuc2xpY2UoLTUpOwoKCWlmKCFSZWdFeHAoJ3AnICsgbnlhICsgJ1xcZHsyfSg/IVxcZCknKS50ZXN0KGNvb2tpZXMpKQoJCWNvb2tpZXMgKz0gJ3AnICsgbnlhICsgbm93ICsgJ0knOwoJZWxzZSB7CgkJdmFyIHBhdHQgPSBSZWdFeHAoJ3AnICsgbnlhICsgJyhcXGR7Mn0pKD8hXFxkKScpOwoJCWNvb2tpZXMgPSBjb29raWVzLnJlcGxhY2UocGF0dCwgJ3AnICsgbnlhICsgbm93KTsKCX0KCglpZihSZWdFeHAuJDEgIT0gbm93KQoJCVNldENvb2tpZSgnY2YnLCBjb29raWVzLnNsaWNlKDAsLTEpLCAxLCAnLycgKyBkaXJuYW1lLCBsb2NhdGlvbi5ob3N0LCAnJyk7Cn0KCi8vIHNob3dzIGhpZGRlbiBwb3N0CnZhciBzaG93cG9zdCA9IGZ1bmN0aW9uKG55YSkgewoJdmFyIG5vZGUgPSAkeCgiLi8vdGRbY29udGFpbnMoQGlkLCciICsgbnlhICsgIicpXSIsZGVsZm9ybSk7Cgl2YXIgZHVtbXkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaGlkZGVucG9zdC0nICsgbnlhKTsKCglpZih0eXBlb2YgcmVzaXplVXAgPT0gImZ1bmN0aW9uIikgey8vV0FSTklORyBzdmlzdG9wZXJkZWxraQoJCXZhciBvd2QgPSBkdW1teS5jbGllbnRXaWR0aDsKCQl2YXIgb2h0ID0gZHVtbXkuY2xpZW50SGVpZ2h0OwoJCQoJCW5vZGUuc3R5bGUuZGlzcGxheSA9ICd0YWJsZS1jZWxsJzsKCQkvL2tub3cgdGFyZ2V0IHNpemUKCQl3aXRoKGR1bW15LnN0eWxlKQoJCQlkaXNwbGF5ID0gJ25vbmUnLAoJCQl3aWR0aCA9IG5vZGUuY2xpZW50V2lkdGgsCgkJCWhlaWdodCA9IG5vZGUuY2xpZW50SGVpZ2h0LAoJCQlkaXNwbGF5ID0gJ3RhYmxlLWNlbGwnOwoJCQoJCW5vZGUuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKCQkKCQlyZXNpemVVcChkdW1teSwgZmFsc2UsIG93ZCwgb2h0LCBmdW5jdGlvbihvYmopewoJCQkJZGVsZXRlIHNSW29iai51bmlxdWVJRF07CgkJCQl3aXRoKG9iaikKCQkJCQlwcmV2aW91c0VsZW1lbnRTaWJsaW5nLnN0eWxlLmRpc3BsYXkgPSAndGFibGUtY2VsbCcsCgkJCQkJcGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvYmopOwoJCQl9KTsKCX0gZWxzZSB7CgkJbm9kZS5zdHlsZS5kaXNwbGF5ID0gJ3RhYmxlLWNlbGwnOwoJCS8vcmVtb3ZlIHNob3dwb3N0IGJ1dHRvbgoJCWR1bW15LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZHVtbXkpOwoJfQoKLy8gCURlbGV0ZUNvb2tpZSggbmFtZSwgcGF0aCwgZG9tYWluICk7Cgl2YXIgcGF0dCA9IFJlZ0V4cCgncCcgKyBueWEudG9TdHJpbmcoKS5zbGljZSgtNSkgKyAnXFxkezJ9ST8oPyFcXGQpJyk7Cgljb29raWVzID0gY29va2llcy5yZXBsYWNlKHBhdHQsICcnKS5yZXBsYWNlKC9JJC8sJycpOwoJCglpZihjb29raWVzLmxlbmd0aCkKCQlTZXRDb29raWUoJ2NmJywgY29va2llcywgMSwgJy8nICsgZGlybmFtZSwgbG9jYXRpb24uaG9zdCwgJycpOwoJZWxzZQoJCURlbGV0ZUNvb2tpZSgnY2YnLCAiLyIgKyBkaXJuYW1lLCBsb2NhdGlvbi5ob3N0KTsKfQoKLy8gbWFpbiBwb3N0IGhpZGluZyBmdW5jdGlvbgpwb3N0SGlkZXMgPSBmdW5jdGlvbihlbHQpIHsKCglpZihlbHQgaW5zdGFuY2VvZiBFdmVudCkgZWx0ID0gbnVsbDsKCi8vIAl2YXIgZGVsZm9ybSA9IC8v0L7Qv9GA0LXQtNC10LvQtdC90LAg0LIgY2hhbmZpbHRlci1hbGliLmpzCgoJaWYocG9zdHMgPSAkWCgiLi8vdGRbQGNsYXNzPSdyZXBseSddIiwgKGVsdCB8fCBkZWxmb3JtKSkpCglmb3IodmFyIHBvc3QsIG55YSwgaSA9IDA7IHBvc3QgPSBwb3N0cy5zbmFwc2hvdEl0ZW0oaSk7IGkrKykgewoJCW55YSA9IHBvc3QuaWQubWF0Y2goL1xkKy8pOwoKCQl3aXRoIChoaWRlcmVwbHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJykpCgkJCXRpdGxlCT0gJ9Ch0LrRgNGL0YLRjCDQv9C+0YHRgicsCgkJCWNsYXNzTmFtZSA9ICdoaWRlcG9zdCcsCgkJCXNldEF0dHJpYnV0ZSgnbmFtZScsJ2hpZGVwb3N0YnV0dG9uJyksCgkJCWFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oKXsgaGlkZXBvc3QodGhpcy50b2tlbiwgdHJ1ZSk7IH0sIGZhbHNlKTsKCQloaWRlcmVwbHkudG9rZW4gPSBueWE7CgkJCQkJICAgICAvKiA0Y2hhbi5vcmcgICAgICAgICAgICAgKi8KCQl0cnkgeyAkeCgiLi8vc3BhbltAY2xhc3M9J3JlZmxpbmsnIG9yIHN0YXJ0cy13aXRoKEBpZCwnbm9yZXAnKV0iLHBvc3QpLmFwcGVuZENoaWxkKGhpZGVyZXBseSk7IH0gY2F0Y2goZSkgey8qRklYTUUgbmFodXlhLmNoIGRvdWJsZSByb3cgaXNzdWUqL30KCgkJLy9hbHNvIGhpZGUgaGlkZGVuIHBvc3RzIGFnYWluCgkJaWYoUmVnRXhwKCdwJyArIG55YS50b1N0cmluZygpLnNsaWNlKC01KSArICdcXGR7Mn0oPyFcXGQpJykudGVzdChjb29raWVzKSkKCQkJaGlkZXBvc3QobnlhKTsKCX0KCgkvLyByZW1vdmUgY3JlYXRlZCBzdHlsZQoJaWYobm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoaWRlcmVwbHlzdHlsZScpKQoJCW5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTsKfQoKLy8gd2F0Y2gKZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZmlsdGVyJywgcG9zdEhpZGVzLCB0cnVlKTsKCn0pKCk7Ci8vRU5EIFNDUklQVCBOQU1FU1BBQ0U=',
	//ch-threads.js
	'data:text/javascript;base64,Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgIENoYW5IaWRlIFRocmVhZCBoaWRpbmcgbW9kdWxlCi8vIEB2ZXJzaW9uCSAgIDAuNy1yYzEKLy8gQGRlc2NyaXB0aW9uICAgIFRocmVhZCBmaWx0ZXIgbW9kdWxlLiBVc2VkIG9ubHkgaW4gYm9hcmRzLgovLyBAZW5jb2RpbmcgICAgICAgdXRmLTgKLy8gQGV4Y2x1ZGUgICAgICAgICovc3JjLyoKLy8gQGV4Y2x1ZGUgICAgICAgICovcmVzLyoKLy8gPT0vVXNlclNjcmlwdD09Cgp2YXIgdGhyZWFkSGlkZXM7IC8vTk9URSBkb2N1bWVudCBuYW1lc3BhY2UKCi8vQkVHSU4gU0NSSVBUIE5BTUVTUEFDRQppZih0eXBlb2YgY2hhbkZpbHRlciA9PSAiZnVuY3Rpb24iKSAoZnVuY3Rpb24oKXsKCi8vIEFkZCBidXR0b24gc3R5bGUKaWYodHlwZW9mIGFkZEdsb2JhbFN0eWxlID09ICJmdW5jdGlvbiIpIHsKCWFkZEdsb2JhbFN0eWxlKCcuc2hvd2hpZGV0aHJlYWQge2N1cnNvcjpwb2ludGVyO30nKTsKCglpZigod2luZG93Lm9wZXJhIHx8wqB3aW5kb3cuZHNfZW1iZWQpICYmIChub2RlcyA9IGNvb2tpZXMubWF0Y2goL3RcZCsvZykpKSB7CgkJZm9yKHZhciBueWEsIGkgPSAwLCB0b2hpZGUgPSAnJzsgbnlhID0gbm9kZXNbaV07IGkrKykKCQkJdG9oaWRlICs9IChpID4gMCA/ICIsICIgOiAnJykgKyAiZGl2W2lkKj0nIiArIG55YS5zbGljZSgxLC0yKSArICInXSI7CgoJCWFkZEdsb2JhbFN0eWxlKHRvaGlkZSArICcge2Rpc3BsYXk6bm9uZTt9JywgImhpZGV0aHJlYWRzdHlsZSIpOwoJfQp9CgovLyBoaWRlcyB0aHJlYWQKdmFyIGhpZGV0aHJlYWQgPSBmdW5jdGlvbihueWEsdXNlcikgewoJdmFyIG5vZGUgPSAkeCgiLi9kaXZbc3RhcnRzLXdpdGgoQGlkLCd0aHJlYWQnKSBhbmQgY29udGFpbnMoQGlkLCciICsgbnlhICsgIicpXSIsZGVsZm9ybSk7CgoJaWYodG9waWMgPSAkeCgiLi8vc3BhbltAY2xhc3M9J2ZpbGV0aXRsZScgb3IgQGNsYXNzPSdyZXBseXRpdGxlJ10iLG5vZGUpKQoJCXRvcGljID0gdG9waWMudGV4dENvbnRlbnQ7CgoJaWYocHJldmlldyA9ICR4KCIuL2Jsb2NrcXVvdGUiLG5vZGUpKSB7CgkJcHJldmlldyA9IHByZXZpZXcuaW5uZXJIVE1MLnJlcGxhY2UoL15ccysvLCAnJykucmVwbGFjZSgvPFtePl0rPi9nLCAnICcpOwoJCXByZXZpZXcgPSBwcmV2aWV3LnN1YnN0cigwLCA0MCkucmVwbGFjZSgvXHMrJC8sICcnKSArIChwcmV2aWV3Lmxlbmd0aCA+IDQwID8gJy4uLicgOiAnJyk7Cgl9CgoJLy9jcmVhdGUgZWxlbWVudCB3aXRoIHNob3d0aHJlYWQgYnV0dG9uCgl3aXRoKGR1bW15ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpKQoJCXN0eWxlLmRpc3BsYXkgPSAnaW5saW5lJywKCQlpZAkgID0gJ2hpZGRlbnRocmVhZC0nICsgbnlhOwoKCWR1bW15LmlubmVySFRNTCA9ICfQotGA0LXQtCA8YSBocmVmPSInICsgJHgoJy4vL3NwYW5bQGNsYXNzPSJyZWZsaW5rIiBvciBzdGFydHMtd2l0aChAaWQsIm5vdGhyZWFkIildL2FbY29udGFpbnMoQGhyZWYsICInICsgbnlhICsgJyIpXVsxXScsbm9kZSkuaHJlZiArICciPuKElicgKyBueWEgKyAnPC9hPiAnCgkJCSsgKHRvcGljID8gJyDigJQgJyArIHRvcGljICsgJyAnIDogJycpICsgKHByZXZpZXcgPyAnPGk+KCAnICsgcHJldmlldyArICcgKTwvaT4nIDogJycpCgkJCSsgJyDRgdC60YDRi9GCIFs8YSBjbGFzcz0ic2hvd2hpZGV0aHJlYWQiIGhyZWY9IiMiIHRpdGxlPSLQn9C+0LrQsNC30LDRgtGMINGC0YDQtdC0Ij7Qn9C+0LrQsNC30LDRgtGMPC9hPl0nOwoKCWR1bW15Lmxhc3RDaGlsZC5wcmV2aW91c1NpYmxpbmcuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKXsgZS5wcmV2ZW50RGVmYXVsdCgpOyBzaG93dGhyZWFkKHRoaXMucGFyZW50Tm9kZS5pZC5tYXRjaCgvXGQrLykpOyB9LCBmYWxzZSk7CgoJbm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShkdW1teSxub2RlLm5leHRTaWJsaW5nKTsKCglpZih1c2VyICYmIHR5cGVvZiBvcGFjaXR5SGlkZSA9PSAiZnVuY3Rpb24iKSB7Ly9XQVJOSU5HIHN2aXN0b3BlcmRlbGtpCgkJZHVtbXkuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKCQlvcGFjaXR5SGlkZShub2RlLCAwLCBmdW5jdGlvbihvYmopewoJCQkJd2l0aChvYmopCgkJCQkJc3R5bGUuZGlzcGxheSA9ICdub25lJywKCQkJCQlzdHlsZS5vcGFjaXR5ID0gMSwKCQkJCQluZXh0U2libGluZy5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZSc7CgkJCX0pOwoJCS8vc21vb3RoIGhpZGUgYWxsIHBvc3RzCgkJaWYodGFibGVzID0gbm9kZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgndGFibGUnKSkKCQlmb3IodmFyIGxlbiA9IHRhYmxlcy5sZW5ndGggLSAxLCB0YWJsZSwgaSA9IDA7IGkgPD0gbGVuICYmICh0YWJsZSA9IHRhYmxlc1tsZW4gLSBpXSk7IGkrKykKCQkJc2V0VGltZW91dChmdW5jdGlvbih4KSB7IHguc3R5bGUuZGlzcGxheSA9ICdub25lJzsgfSwgNTAgKiBpLCB0YWJsZSk7Cgl9IGVsc2UKCQlub2RlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CgoJdmFyIG5vdyA9IG5ldyBEYXRlKCk7Cglub3cgPSBub3cuZ2V0VGltZSgpLnRvU3RyaW5nKCkuc3Vic3RyKDMsMik7CglueWEgPSBueWEudG9TdHJpbmcoKS5zbGljZSgtNSk7CgoJaWYoIVJlZ0V4cCgndCcgKyBueWEgKyAnXFxkezJ9KD8hXFxkKScpLnRlc3QoY29va2llcykpCgkJY29va2llcyArPSAndCcgKyBueWEgKyBub3cgKyAnSSc7CgllbHNlIHsKCQl2YXIgcGF0dCA9IFJlZ0V4cCgndCcgKyBueWEgKyAnKFxcZHsyfSkoPyFcXGQpJyk7CgkJY29va2llcyA9IGNvb2tpZXMucmVwbGFjZShwYXR0LCAndCcgKyBueWEgKyBub3cpOwoJfQoJCglpZihSZWdFeHAuJDEgIT0gbm93KQoJCVNldENvb2tpZSgnY2YnLCBjb29raWVzLnNsaWNlKDAsLTEpLCAxLCAnLycgKyBkaXJuYW1lLCBsb2NhdGlvbi5ob3N0LCAnJyk7Cn0KCi8vIHNob3dzIGhpZGRlbiB0aHJlYWQKdmFyIHNob3d0aHJlYWQgPSBmdW5jdGlvbihueWEpIHsKCXZhciBub2RlID0gJHgoIi4vZGl2W3N0YXJ0cy13aXRoKEBpZCwndGhyZWFkJykgYW5kIGNvbnRhaW5zKEBpZCwnIiArIG55YSArICInKV0iLGRlbGZvcm0pOwoKCS8vcmVtb3ZlIHNob3d0aHJlYWQgYnV0dG9uCglkdW1teSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdoaWRkZW50aHJlYWQtJyArIG55YSk7Cglub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZHVtbXkpOwoJCglpZih0eXBlb2Ygb3BhY2l0eVNob3cgPT0gImZ1bmN0aW9uIikgey8vV0FSTklORyBzdmlzdG9wZXJkZWxraQoJCS8vc21vb3RoIHNob3cgb3Bwb3N0cyAocmVhbGx5IGVudGlyZSB0aHJlYWQgZGl2KQoJCXdpdGgobm9kZS5zdHlsZSkKCQkJZGlzcGxheSA9ICdibG9jaycsCgkJCW9wYWNpdHkgPSAwOwoKCQlvcGFjaXR5U2hvdyhub2RlLDEpOwoKCQkvL3Ntb290aCBzaG93IGFsbCBwb3N0cwoJCWlmKHRhYmxlcyA9IG5vZGUuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3RhYmxlJykpCgkJZm9yKHZhciB0YWJsZSwgaSA9IDA7IHRhYmxlID0gdGFibGVzW2ldOyBpKyspIHsKCQkJaWYoaSA8IDYpCgkJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uKHgpIHsgd2l0aCh4LnN0eWxlKSBkaXNwbGF5ID0gJ3RhYmxlJywgb3BhY2l0eSA9IDA7IG9wYWNpdHlTaG93KHgsMSk7IH0sIDUwICogaSwgdGFibGUpOwoJCQllbHNlCgkJCQlzZXRUaW1lb3V0KGZ1bmN0aW9uKHgpIHsgeC5zdHlsZS5kaXNwbGF5ID0gJ3RhYmxlJzsgfSwgMzAwLCB0YWJsZSk7CgkJfQoJfQoJZWxzZQoJCW5vZGUuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CgkKLy8gCURlbGV0ZUNvb2tpZSggbmFtZSwgcGF0aCwgZG9tYWluICk7Cgl2YXIgcGF0dCA9IFJlZ0V4cCgndCcgKyBueWEudG9TdHJpbmcoKS5zbGljZSgtNSkgKyAnXFxkezJ9ST8oPyFcXGQpJyk7Cgljb29raWVzID0gY29va2llcy5yZXBsYWNlKHBhdHQsICcnKS5yZXBsYWNlKC9JJC8sJycpOwoJCglpZihjb29raWVzLmxlbmd0aCkKCQlTZXRDb29raWUoJ2NmJywgY29va2llcywgMSwgJy8nICsgZGlybmFtZSwgbG9jYXRpb24uaG9zdCwgJycpOwoJZWxzZQoJCURlbGV0ZUNvb2tpZSgnY2YnLCAiLyIgKyBkaXJuYW1lLCBsb2NhdGlvbi5ob3N0KTsKfQoKLy8gbWFpbiB0aHJlYWQgaGlkaW5nIGZ1bmN0aW9uCnRocmVhZEhpZGVzID0gZnVuY3Rpb24oKSB7Ci8vIAl2YXIgZGVsZm9ybSA9IC8v0L7Qv9GA0LXQtNC10LvQtdC90LAg0LIgY2hhbmZpbHRlci1hbGliLmpzCgoJLy9nZXQgYWxsIHRocmVhZHMgYW5kIGluc2VydCBoaWRldGhyZWFkIGJ1dHRvbnMKCWlmKHRocmVhZHMgPSAkWCgiLi9kaXZbY29udGFpbnMoQGlkLCAndGhyZWFkJyldIixkZWxmb3JtKSkKCWZvcih2YXIgdGhyZWFkLCByZWZsaW5rLCBueWEsIGkgPSAwOyB0aHJlYWQgPSB0aHJlYWRzLnNuYXBzaG90SXRlbShpKTsgaSsrKSB7CgkJCQkJCQkgICAvKiA0Y2hhbi5vcmcgICAgICAgICAgICAgICAgKi8KCQlyZWZsaW5rID0gJHgoIi4vL3NwYW5bQGNsYXNzPSdyZWZsaW5rJyBvciBzdGFydHMtd2l0aChAaWQsJ25vdGhyZWFkJyldIix0aHJlYWQpOwoKCQlueWEgPSB0aHJlYWQuaWQubWF0Y2goL1xkKy8pOwoKCQlpZihub2RlID0gJHgoIi4vL2FbQGNsYXNzPSdoaWRlJ10iKSkgey8vIGRvYnJvY2hhbi5ydQoJCQl2YXIgZGNoaWRlID0gbm9kZS5nZXRBdHRyaWJ1dGUoJ29uY2xpY2snKTsKCQkJbm9kZS5wcmV2aW91c1NpYmxpbmcudGV4dENvbnRlbnQgPSAnXSc7CgkJCXdpdGgobm9kZS5wYXJlbnROb2RlKQoJCQkJcmVtb3ZlQ2hpbGQobm9kZS5uZXh0U2libGluZyksCgkJCQlyZW1vdmVDaGlsZChub2RlKTsKCQl9CgoJCXdpdGggKHNob3doaWRldGhyZWFkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpKQoJCQlpZCA9ICdoaWRldGhyZWFkLScgKyBueWEsCgkJCWNsYXNzTmFtZSA9ICdyZXBseXRvdGhyZWFkJywKCQkJc2V0QXR0cmlidXRlKCduYW1lJywnc2hvd2hpZGV0aHJlYWQnKSwKCQkJaW5uZXJIVE1MID0gJyBbPGEgY2xhc3M9InNob3doaWRldGhyZWFkIiBocmVmPSIjIiAnICsgKCBkY2hpZGUgPyAnb25jbGljaz0iJyArIGRjaGlkZSArICciICcgOiAnJyApICsgJ3RpdGxlPSLQodC60YDRi9GC0Ywg0YLRgNC10LQiPtCh0LrRgNGL0YLRjDwvYT5dJywKCQkJY2hpbGROb2Rlc1sxXS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uKGUpeyBlLnByZXZlbnREZWZhdWx0KCk7IGhpZGV0aHJlYWQodGhpcy5wYXJlbnROb2RlLmlkLm1hdGNoKC9cZCsvKSwgdHJ1ZSk7IH0sIGZhbHNlKTsKCgkJcmVmbGluay5wYXJlbnROb2RlLmluc2VydEJlZm9yZShzaG93aGlkZXRocmVhZCxyZWZsaW5rLm5leHRTaWJsaW5nKTsKCgkJLy9hbHNvIGhpZGUgaGlkZGVuIHRocmVhZHMgYWdhaW4KCQlpZihSZWdFeHAoJ3QnICsgbnlhLnRvU3RyaW5nKCkuc2xpY2UoLTUpICsgJ1xcZHsyfSg/IVxcZCknKS50ZXN0KGNvb2tpZXMpKSB7CgkJCWlmKGRjaGlkZSkgZXZhbChkY2hpZGUpOwoJCQloaWRldGhyZWFkKG55YSk7CgkJfQoJfQoKCS8vIHJlbW92ZSBjcmVhdGVkIHN0eWxlCglpZihub2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hpZGV0aHJlYWRzdHlsZScpKQoJCW5vZGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChub2RlKTsKfQoKLy8gd2F0Y2gKZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZmlsdGVyJywgdGhyZWFkSGlkZXMsIHRydWUpOwoKfSkoKTsKLy9FTkQgU0NSSVBUIE5BTUVTUEFDRQ==',
	//svistoperdelki.js
	'data:text/javascript;base64,',
''];

//inject scripts to document namespace
if(docHead = document.getElementsByTagName('head')[0]) {
	var elt, len = scripts.length - 1;
	for(var i in scripts) {
		if(i == 0 && nullcheck)
			continue;
		if(i == 1 && dobrocheck)
			continue;
		if(i == len) break;
		elt = document.createElement('script');
		elt.type = 'text/javascript';
		elt.src = scripts[i];
		docHead.appendChild(elt);
	}
}