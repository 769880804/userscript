// Google Reader Demotywatory
// 
// Queue object available here http://safalra.com/web-design/javascript/queues/
// Idea and core functionality based on Google Reader Preview available here http://userscripts.org/scripts/review/8561
// Copyright (c) 2010, kossib
// Released under the GPL license
// http://www.gnu.org/copyleft/gpl.html
// --------------------------------------------------------------------
// WHAT IT DOES:
// Replaces Google Reader's summary for demotywatory.pl (empty one) with an actual image on the target page
// --------------------------------------------------------------------
// ==UserScript==
// @namespace     http://www.squarefree.com/jsenv/autogenerated
// @name          Google Reader Demotywatory
// @description   Displays the big image in google reader preview.
// @include         *reader.google.*/reader/*
// @include         *www.google.*/reader/*
// ==/UserScript==

function Queue(){var _1=[];var _2=0;this.getSize=function(){return _1.length-_2;};this.isEmpty=function(){return (_1.length==0);};this.enqueue=function(_3){_1.push(_3);};this.dequeue=function(){var _4=undefined;if(_1.length){_4=_1[_2];if(++_2*2>=_1.length){_1=_1.slice(_2);_2=0;}}return _4;};this.getOldestElement=function(){var _5=undefined;if(_1.length){_5=_1[_2];}return _5;};}
var q = new Queue();

document.getElementsByClassName = function(className, parentNode) {
  var elements = [];
  var parent = parentNode;
  if (parentNode == undefined) {
	  parent = document.body;
  }
  if (parent.getElementsByTagName == undefined) {
	  return elements;
  }
  var children = parent.getElementsByTagName('*');
  for (var i = 0; i < children.length; i ++) {
	var child = children[i];
    if (child.className.match(new RegExp("(^|\\s)" + className + "(\\s|$)"))) {
      elements[elements.length] = child;
	}
  }
  return elements;
}

var decorate_new_elements = function(e) {
	var element = e.target;
	 if (element.className != "entry-container" && element.className.lastIndexOf("entry entry-")<0) {
		return;
	}
	var elements = document.getElementsByClassName("entry-title", element);
	if ((elements == undefined) || (elements.length == 0)) {
		return;
	}
	var entry_title = elements[0];
	var href_array = /href=\"(http:\/\/[^\"]*)\"/.exec(entry_title.innerHTML);
	if (href_array == undefined || href_array.length == 0) {
		return;
	}
	var href = unescapeHTML(href_array[1]);
	elements = document.getElementsByClassName("entry-body", element);
	if (elements != undefined && (elements.length > 0)) {
		// Turn on preview for URLs that match the strings below.
		if (href.toLowerCase().lastIndexOf("demotywatory.pl")>-1) 
		{
			q.enqueue( {body:elements[0], href:href} );
			if (q.getSize()==1)
				setTimeout(processQueue, 0);
		}
	}
}
var processing = false;

function processQueue() {
	if(q.getSize() == 0) {
		setTimeout(processQueue, 1000);
		return;
	}
	if (processing)
		return;
		
	processing = true;
	var itm = q.getOldestElement();
	GM_xmlhttpRequest({
		method:"GET",
		url:itm.href,
		onload:function(xmlhttp) {
			var itm = q.dequeue();
			processing = false;
			if (q.getSize()>0)
				setTimeout(processQueue, 100);
			if (!(xmlhttp.readyState==4 && xmlhttp.status==200))
				return;
			var bigurl = /bigurl=\"(http:\/\/[^\"]*)\"/.exec(xmlhttp.responseText); 
			itm.body.innerHTML = (bigurl != undefined && bigurl.length > 0) 
									? "<img src='"+ bigurl[1]+"'></img>"
									: "deleted";
			
		}
	});
}

function unescapeHTML(html) {
var htmlNode = document.createElement("DIV");
htmlNode.innerHTML = html;
if(htmlNode.innerText)
	return htmlNode.innerText; // IE
return htmlNode.textContent; // FF
}

document.body.addEventListener('DOMNodeInserted', decorate_new_elements, false);
//.user.js